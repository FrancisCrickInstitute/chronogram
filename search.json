[{"path":"https://franciscrickinstitute.github.io/chronogram/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 chronogram authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Chronogram assembly from SQL","text":"build chronogram SQL database. use example derived de-identified PITCH dataset available , CC--4.0 licence: https://data.mendeley.com/datasets/fyp26zjgmj/1 Published: 3 November 2021, DOI: 10.17632/fyp26zjgmj.1. Contributors: Rebecca Payne, Susan Hopkins, Victoria Hall, Christina Dold, Christopher Duncan, Alex Richter, Miles Carroll, Gavin Screaton, Thushan de Silva, Lance Turtle, Paul Klenerman, Susanna Dunachie, PITCH Consortium authors. dataset supports Payne et al. Immunogenicity standard extended dosing intervals BNT162b2 mRNA vaccine Cell 2021 NOTE Changes made de-identified public dataset (DOI: 10.17632/fyp26zjgmj.1). public data reports dates MM/YYYY. build chronogram assigned randomly 1-28 DD DD/MM/YYYY dose 1, used available intervals days place remaining data date time. illustration purposes, need plausible DD/MM/YYYY dates - real. public dataset used example (assays included). motivation re-analyse Payne et al. scientific reasons, use example dataset package. Instead consult de-identified Mendeley data (DOI: 10.17632/fyp26zjgmj.1), Cell manuscript’s data code availability statement.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"approach","dir":"Articles","previous_headings":"","what":"Approach","title":"Chronogram assembly from SQL","text":"Use dbplyr extract relevant tibbles existing SQL database. extracted tibbles assembled chronogram constructor functions. Reminder five required inputs: list participant study IDs start date end date metadata, stored identifier #1. Experimental data, stored identifier #1 date sample. 1-3 straightforward, start 4","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"connect-to-sql-db","dir":"Articles","previous_headings":"Approach","what":"Connect to SQL db","title":"Chronogram assembly from SQL","text":"","code":"## Connect to the sql database ## ## here we use the shipped example database db_file <- system.file(   \"extdata\", \"pitch-database-output.sqlite\",   package = \"chronogram\" )  ## R covers most types of SQL. Here, we use SQLite. pitch_db <- DBI::dbConnect(RSQLite::SQLite(), db_file)  dbplyr::src_dbi(pitch_db) #> src:  sqlite 3.46.0 [/home/runner/work/_temp/Library/chronogram/extdata/pitch-database-output.sqlite] #> tbls: metadata, MSD_data, MSD.data, nAb_data, nAb.data, sqlite_stat1, #>   sqlite_stat4"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"get-metadata","dir":"Articles","previous_headings":"Approach","what":"Get metadata","title":"Chronogram assembly from SQL","text":"leaves data SQL db, routes R print first rows. large databases, significant -front filtering can take place, tidyverse verbs work . example, let’s restrict metadata participants single centre. See dbplyr documentation info: https://dbplyr.tidyverse.org/index.html . example small, want move data R, use dbplyr::collect().","code":"metadata <- tbl(   pitch_db,   ## give the name of the SQL table below ##   \"metadata\" )  head(metadata) #> # Source:   SQL [6 x 6] #> # Database: sqlite 3.46.0 [/home/runner/work/_temp/Library/chronogram/extdata/pitch-database-output.sqlite] #>      ID Centre_code Previous_infection Vaccine_interval dose_1_date dose_2_date #>   <int>       <int> <chr>              <chr>                  <dbl>       <dbl> #> 1  4001           4 Y                  LONG                   18608       18692 #> 2  4002           4 Y                  SHORT                  18650       18681 #> 3  4003           4 Y                  LONG                   18612       18682 #> 4  4004           4 Y                  LONG                   18624       18695 #> 5  4005           4 Y                  LONG                   18623       18728 #> 6  4006           4 N                  LONG                   18655       18704 metadata_filt <- tbl(   pitch_db,   ## give the name of the SQL table below ##   \"metadata\" ) %>%   filter(Centre_code == 1)  head(metadata_filt) #> # Source:   SQL [6 x 6] #> # Database: sqlite 3.46.0 [/home/runner/work/_temp/Library/chronogram/extdata/pitch-database-output.sqlite] #>      ID Centre_code Previous_infection Vaccine_interval dose_1_date dose_2_date #>   <int>       <int> <chr>              <chr>                  <dbl>       <dbl> #> 1  1001           1 Y                  LONG                   18653       18718 #> 2  1002           1 Y                  LONG                   18637       18708 #> 3  1003           1 Y                  LONG                   18602       18658 #> 4  1004           1 Y                  LONG                   18638       18709 #> 5  1005           1 Y                  LONG                   18652       18715 #> 6  1007           1 Y                  LONG                   18629       18692 metadata <- tbl(   pitch_db,   ## give the name of the SQL table below ##   \"metadata\" ) %>%   collect()  metadata #> # A tibble: 587 × 6 #>       ID Centre_code Previous_infection Vaccine_interval dose_1_date dose_2_date #>    <int>       <int> <chr>              <chr>                  <dbl>       <dbl> #>  1  4001           4 Y                  LONG                   18608       18692 #>  2  4002           4 Y                  SHORT                  18650       18681 #>  3  4003           4 Y                  LONG                   18612       18682 #>  4  4004           4 Y                  LONG                   18624       18695 #>  5  4005           4 Y                  LONG                   18623       18728 #>  6  4006           4 N                  LONG                   18655       18704 #>  7  4007           4 Y                  LONG                   18603       18674 #>  8  4008           4 Y                  LONG                   18607       18708 #>  9  4009           4 Y                  LONG                   18606       18677 #> 10  4010           4 Y                  LONG                   18607       18678 #> # ℹ 577 more rows"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"clean-metadata","dir":"Articles","previous_headings":"Approach > Get metadata","what":"Clean metadata","title":"Chronogram assembly from SQL","text":"dose_1_date dose_2_date columns lost DD-MM-YYYY formatting SQL db constructed. Fix: Precisely cleaning needed study specific.","code":"metadata <- metadata %>%   mutate(across(ends_with(\"date\"), ~     as.Date(.x, origin = \"1970-01-01\")))  ## show the relevant columns ## metadata %>%   select(ID, contains(\"date\")) %>%   head() #> # A tibble: 6 × 3 #>      ID dose_1_date dose_2_date #>   <int> <date>      <date>      #> 1  4001 2020-12-12  2021-03-06  #> 2  4002 2021-01-23  2021-02-23  #> 3  4003 2020-12-16  2021-02-24  #> 4  4004 2020-12-28  2021-03-09  #> 5  4005 2020-12-27  2021-04-11  #> 6  4006 2021-01-28  2021-03-18"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"list-of-participant-ids","dir":"Articles","previous_headings":"Approach","what":"List of participant IDs","title":"Chronogram assembly from SQL","text":"Extract SQL’s master table (example, ’s metadata table).","code":"studyId <- metadata$ID"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"start-and-end-date","dir":"Articles","previous_headings":"Approach","what":"Start and end date","title":"Chronogram assembly from SQL","text":"can use 1st Jan 2020 (.e. pre-pandemic) start date, date publication end date.","code":"## provide dates as character vectors DDMMYYYY ## start_date <- \"01012020\" end_date <- \"03112021\""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"experimental-data","dir":"Articles","previous_headings":"Approach","what":"Experimental data","title":"Chronogram assembly from SQL","text":"small study, want import chronogram format, can `collect()` relevant SQL table, fix formatting ready chronogram assembly. large study want subset available SQL data, consider filtering smaller selection participants, using similar approach `metadata_filt` . extremely large studies, several stages chronogram assembly annotation can computationally expensive. Building chronogram massive studies (>40,000 participants, >2 years) fails “lab issued” laptops. However, enough metadata can pulled R select participants relevant given analysis, analysis-relevant chronogram can build. entirety massive study required, first option swap high-performance compute cluster (high end desktop). second option, break task smaller components, best performed building annotating chronograms ~5000 individuals (total number rows < ~ 1,000,000), writing disk subsequent windowing, filtering, selecting chronograms parallel. third approach take spirit package push computational work SQL server. likely require solution specific study’s SQL flavour, assumes server compute capacity (user permissions utilise), supporting SQL degree (example, tidyverse verbs variably translated SQL flavours) currently beyond scope package team. welcome hearing users approaches larger studies.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"neutralisation-data","dir":"Articles","previous_headings":"Approach > Experimental data","what":"Neutralisation data","title":"Chronogram assembly from SQL","text":"","code":"## Collect the experimental data from SQL ## nAb_data <- tbl(   pitch_db,   ## give the name of the SQL table below ##   \"nAb_data\" ) %>%   collect()   ## Again, the date needs re-formatting ## nAb_data %>%   head() #> # A tibble: 6 × 6 #>      ID calendar_date Victoria  Beta Gamma Delta #>   <int>         <dbl>    <int> <int> <int> <chr> #> 1   561         18813       10    10    46 10    #> 2   568         18744       10    10    10 10    #> 3   447         18679       92    10   132 10    #> 4   557            NA      115    10   290 10    #> 5   564         18729       10    10    24 10    #> 6   581         18715       46    10    43 10  nAb_data <- nAb_data %>%   mutate(across(ends_with(\"date\"), ~     as.Date(.x, origin = \"1970-01-01\")))"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"msd-data","dir":"Articles","previous_headings":"Approach > Experimental data","what":"MSD data","title":"Chronogram assembly from SQL","text":"","code":"## Collect the experimental data from SQL ## MSD_data <- tbl(   pitch_db,   ## give the name of the SQL table below ##   \"MSD_data\" ) %>%   collect()   ## Again, the date needs re-formatting ## MSD_data %>%   head() #> # A tibble: 6 × 14 #>      ID Cov2_RBD_MSD Cov2_RBD_BAU Cov_2N_MSD Cov_2N_BAU Cov_2S_MSD Cov_2S_BAU #>   <int>        <dbl>        <dbl>      <dbl>      <dbl>      <dbl>      <dbl> #> 1     2       78191.        2127.      170.       0.402    164133.      1480. #> 2     3        6694.         182.       52.7      0.124     14510.       131. #> 3     5      559384.       15215.     4692.      11.1      912009.      8221. #> 4     5       11600.         316.     5261.      12.4       28710.       259. #> 5     5      310782.        8453.     2072.       4.89     531463.      4791. #> 6     8       88388.        2404.     7323.      17.3      217099.      1957. #> # ℹ 7 more variables: HKU1_S <dbl>, MERS_S <dbl>, NL63_S <dbl>, OC43_S <dbl>, #> #   X229E_S <dbl>, Cov_1S <dbl>, calendar_date <dbl>  MSD_data <- MSD_data %>%   mutate(across(ends_with(\"date\"), ~     as.Date(.x, origin = \"1970-01-01\")))"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"assemble-chronogram","dir":"Articles","previous_headings":"Approach","what":"Assemble chronogram","title":"Chronogram assembly from SQL","text":"Now relevant objects memory cleaned, can assemble chronogram.","code":"pitch_chronogram_skeleton <- chronogram_skeleton(   ids = studyId,   start_date = start_date,   end_date = end_date,   col_ids = ID,   col_calendar_date = calendar_date ) pitch_chronogram <- chronogram(   pitch_chronogram_skeleton, metadata ) pitch_chronogram <- cg_add_experiment(   pitch_chronogram,   nAb_data )  pitch_chronogram <- cg_add_experiment(   pitch_chronogram,   MSD_data )  pitch_chronogram #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    ID  #>  Starts on:     2020-01-01  #>  Ends on:       2021-11-03  #>  Contains:      587  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      673 - 673 days [min-max per participant] #>  Metadata:      Centre_code, Previous_infection, Vaccine_interval, dose_1_date, dose_2_date  #>  Size:          64.84 MB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 395,051 × 23 #>    calendar_date ID    Centre_code Previous_infection Vaccine_interval #>  * <date>        <fct>       <int> <chr>              <chr>            #>  1 2020-01-01    100             0 Y                  LONG             #>  2 2020-01-02    100             0 Y                  LONG             #>  3 2020-01-03    100             0 Y                  LONG             #>  4 2020-01-04    100             0 Y                  LONG             #>  5 2020-01-05    100             0 Y                  LONG             #>  6 2020-01-06    100             0 Y                  LONG             #>  7 2020-01-07    100             0 Y                  LONG             #>  8 2020-01-08    100             0 Y                  LONG             #>  9 2020-01-09    100             0 Y                  LONG             #> 10 2020-01-10    100             0 Y                  LONG             #> # ℹ 395,041 more rows #> # ℹ 18 more variables: dose_1_date <date>, dose_2_date <date>, Victoria <int>, #> #   Beta <int>, Gamma <int>, Delta <chr>, Cov2_RBD_MSD <dbl>, #> #   Cov2_RBD_BAU <dbl>, Cov_2N_MSD <dbl>, Cov_2N_BAU <dbl>, Cov_2S_MSD <dbl>, #> #   Cov_2S_BAU <dbl>, HKU1_S <dbl>, MERS_S <dbl>, NL63_S <dbl>, OC43_S <dbl>, #> #   X229E_S <dbl>, Cov_1S <dbl>"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"annotate-chronogram-and-analyse","dir":"Articles","previous_headings":"Approach","what":"Annotate chronogram and analyse","title":"Chronogram assembly from SQL","text":"Now assembly complete next step annotate chronogram (find label infection episodes, count number exposures vaccination, infection total). Check annotation vignettes usage examples. Let’s plot results un-annotated PITCH dataset.   expected - SARS-CoV-2 binding IgG boosted Covid vaccination, whereas binding IgG OC43’s spike boosted Covid vaccination. NOTE highlighted earlier, changes made de-identified public dataset (DOI: 10.17632/fyp26zjgmj.1). motivation re-analyse Payne et al. scientific reasons, use example dataset package. Instead consult de-identified Mendeley data (DOI: 10.17632/fyp26zjgmj.1), data code availability statement Payne et al. Immunogenicity standard extended dosing intervals BNT162b2 mRNA vaccine Cell 2021.","code":"pitch_chronogram %>%   filter(!is.na(Cov_2S_MSD)) %>%   ggplot(aes(x = calendar_date, y = Cov_2S_MSD)) +   geom_point(shape = 20, alpha = 0.4) +   scale_y_log10() +   facet_grid(. ~ Previous_infection + Vaccine_interval,     labeller = \"label_both\"   ) +   theme_bw() +   labs(main = \"SARS-CoV-2 Spike binding Ab\") ## ----- pitch_chronogram %>%   filter(!is.na(OC43_S)) %>%   ggplot(aes(x = calendar_date, y = OC43_S)) +   geom_point(shape = 20, alpha = 0.4) +   scale_y_log10() +   facet_grid(. ~ Previous_infection + Vaccine_interval,     labeller = \"label_both\"   ) +   theme_bw() +   labs(main = \"OC43 [a common coronavirus] Spike binding Ab\")"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Chronogram assembly from SQL","text":"vignette shows stepwise approach move data SQL chronogram. Whilst clean-code study/database specific, re-usable throughout study. suggest combining equivalent code study Rscript - series Rscripts - run non-interactively, example whilst ’re coffee scheduled task.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/SQL_assembly.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"Chronogram assembly from SQL","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.1    RSQLite_2.3.7    DBI_1.2.3        dbplyr_2.5.0     #> [5] dplyr_1.1.4      chronogram_1.0.0 #>  #> loaded via a namespace (and not attached): #>  [1] tidyr_1.3.1       sass_0.4.9        utf8_1.2.4        generics_0.1.3    #>  [5] digest_0.6.36     magrittr_2.0.3    timechange_0.3.0  evaluate_0.24.0   #>  [9] grid_4.4.1        fastmap_1.2.0     blob_1.2.4        lobstr_1.1.2      #> [13] jsonlite_1.8.8    purrr_1.0.2       fansi_1.0.6       scales_1.3.0      #> [17] textshaping_0.4.0 jquerylib_0.1.4   cli_3.6.3         rlang_1.1.4       #> [21] bit64_4.0.5       munsell_0.5.1     withr_3.0.0       cachem_1.1.0      #> [25] yaml_2.3.9        tools_4.4.1       memoise_2.0.1     colorspace_2.1-0  #> [29] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   lubridate_1.9.3   #> [33] fs_1.6.4          bit_4.0.5         ragg_1.3.2        pkgconfig_2.0.3   #> [37] desc_1.4.3        pkgdown_2.1.0     pillar_1.9.0      bslib_0.7.0       #> [41] gtable_0.3.5      glue_1.7.0        systemfonts_1.1.0 highr_0.11        #> [45] xfun_0.45         tibble_3.2.1      tidyselect_1.2.1  knitr_1.48        #> [49] farver_2.1.2      htmltools_0.5.8.1 rmarkdown_2.27    compiler_4.4.1"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"build-a-chronogram","dir":"Articles","previous_headings":"","what":"Build a chronogram","title":"Annotating infection episodes","text":"","code":"## Fictional example data ## data(smallstudy)  ## 5 requirements ## ids <- smallstudy$small_study_ids  start <- \"01012020\" end <- \"10102021\"  meta <- smallstudy$small_study_metadata ab <- smallstudy$small_study_Ab # here, we just have antibody data   ## Make a chronogram ## small_study <- chronogram_skeleton(   ids = ids,   start_date = start,   end_date = end,   ## change this to your ID column name ##   col_ids = elig_study_id,   ## change this to your date column name ##   col_calendar_date = calendar_date )  small_study <- chronogram(small_study, meta)  small_study <- cg_add_experiment(   small_study,   ab )  small_study #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Contains:      3  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      649 - 649 days [min-max per participant] #>  Metadata:      age, sex, dose_1, date_dose_1, dose_2, date_dose_2  #>  Size:          129.55 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 10 #>    calendar_date elig_study_id   age sex   dose_1 date_dose_1 dose_2 date_dose_2 #>  * <date>        <fct>         <dbl> <fct> <fct>  <date>      <fct>  <date>      #>  1 2020-01-01    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  2 2020-01-02    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  3 2020-01-03    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  4 2020-01-04    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  5 2020-01-05    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  6 2020-01-06    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  7 2020-01-07    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  8 2020-01-08    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  9 2020-01-09    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> 10 2020-01-10    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> # ℹ 1,937 more rows #> # ℹ 2 more variables: serum_Ab_S <dbl>, serum_Ab_N <dbl>  ## Use cg_add_experiment() for extra assays ##"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"some-example-infection-data","dir":"Articles","previous_headings":"","what":"Some example infection data","title":"Annotating infection episodes","text":"small_study now chrongram infection episodes, serological data.","code":"## Simulate some infection data ## infections_to_add <- tibble::tribble(   ~calendar_date, ~elig_study_id, ~LFT, ~PCR, ~symptoms,   \"01102020\", \"1\", \"pos\", NA, NA,   \"11102020\", \"1\", \"pos\", NA, \"severe\" ) ## Make calendar_date a date ## infections_to_add$calendar_date <- lubridate::dmy(   infections_to_add$calendar_date ) ## add to chronogram small_study_inf <- cg_add_experiment(   small_study,   infections_to_add )  small_study_inf #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Contains:      3  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      649 - 649 days [min-max per participant] #>  Metadata:      age, sex, dose_1, date_dose_1, dose_2, date_dose_2  #>  Size:          168.98 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 13 #>    calendar_date elig_study_id   age sex   dose_1 date_dose_1 dose_2 date_dose_2 #>  * <date>        <fct>         <dbl> <fct> <fct>  <date>      <fct>  <date>      #>  1 2020-01-01    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  2 2020-01-02    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  3 2020-01-03    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  4 2020-01-04    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  5 2020-01-05    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  6 2020-01-06    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  7 2020-01-07    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  8 2020-01-08    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  9 2020-01-09    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> 10 2020-01-10    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> # ℹ 1,937 more rows #> # ℹ 5 more variables: serum_Ab_S <dbl>, serum_Ab_N <dbl>, LFT <chr>, PCR <lgl>, #> #   symptoms <chr>  small_study_inf %>% arrange(PCR) #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Contains:      3  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      649 - 649 days [min-max per participant] #>  Metadata:      age, sex, dose_1, date_dose_1, dose_2, date_dose_2  #>  Size:          168.98 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 13 #>    calendar_date elig_study_id   age sex   dose_1 date_dose_1 dose_2 date_dose_2 #>  * <date>        <fct>         <dbl> <fct> <fct>  <date>      <fct>  <date>      #>  1 2020-01-01    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  2 2020-01-02    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  3 2020-01-03    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  4 2020-01-04    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  5 2020-01-05    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  6 2020-01-06    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  7 2020-01-07    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  8 2020-01-08    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  9 2020-01-09    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> 10 2020-01-10    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> # ℹ 1,937 more rows #> # ℹ 5 more variables: serum_Ab_S <dbl>, serum_Ab_N <dbl>, LFT <chr>, PCR <lgl>, #> #   symptoms <chr>"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"infection-episode-parsing","dir":"Articles","previous_headings":"","what":"Infection episode parsing","title":"Annotating infection episodes","text":"episode definition depend study’s objectives, design hypotheses. example, study weekly nasopharyngeal PCRs may wish use PCR tests define episode, include asymptomatic infections. vignette, assume study’s definition call positive LFT PCR severe symptoms (even LFT/PCR +ve) counted episode. illustrative: study need solution. Chronogram provides generalised code, allow code implementation episode definition. following code chunk, ’re identifying episodes infection baesd specific strings within specified columns. dataset, look “pos” column LFT, “Post” column PCR “^severe” column symptoms. presence one triggers infection_episode labelled. function cg_annotate_episodes_find() searches backwards forwards scoop different calendar dates single episodes, common symptoms precede test positivity (can tweak episode_days). flexibility configure infection_cols infection_present match string column. matching performed string matching. Care required matching exact text. Base R’s regex() help lots examples matching expressions including using wildcards. examples string matching problems.","code":"small_study_inf <- cg_annotate_episodes_find(small_study_inf,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"^severe\") ) #> Parsed: infection_cols and infection_present #>            #> Searching in the [[column]], for the \"text\": #> stringr::str_detect(.data[[\"LFT\"]], \"pos\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"PCR\"]], \"Post\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"symptoms\"]], \"^severe\") ~ \"yes\" #>  #>  #> ...detecting will be exact. #>           Capitals, spelling etc must be precise #> calendar_date elig_study_id episode_number #> Joining with `by = join_by(calendar_date, elig_study_id)`  ## summary statistics ## summary(small_study_inf$episode_number) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>       1       1       1       1       1       1    1936   ## numbers of infection episodes per individual ## small_study_inf %>%   group_by(elig_study_id) %>%   summarise(n = max(episode_number, na.rm = TRUE)) #> Warning: There were 2 warnings in `summarise()`. #> The first warning was: #> ℹ In argument: `n = max(episode_number, na.rm = TRUE)`. #> ℹ In group 2: `elig_study_id = 2`. #> Caused by warning in `max()`: #> ! no non-missing arguments to max; returning -Inf #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. #> # A tibble: 3 × 2 #>   elig_study_id     n #>   <fct>         <dbl> #> 1 1                 1 #> 2 2              -Inf #> 3 3              -Inf  small_study_inf #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Contains:      3  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      649 - 649 days [min-max per participant] #>  Metadata:      age, sex, dose_1, date_dose_1, dose_2, date_dose_2  #>  Size:          224.15 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 17 #>    calendar_date elig_study_id   age sex   dose_1 date_dose_1 dose_2 date_dose_2 #>  * <date>        <fct>         <dbl> <fct> <fct>  <date>      <fct>  <date>      #>  1 2020-01-01    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  2 2020-01-02    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  3 2020-01-03    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  4 2020-01-04    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  5 2020-01-05    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  6 2020-01-06    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  7 2020-01-07    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  8 2020-01-08    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  9 2020-01-09    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> 10 2020-01-10    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> # ℹ 1,937 more rows #> # ℹ 9 more variables: serum_Ab_S <dbl>, serum_Ab_N <dbl>, LFT <chr>, PCR <lgl>, #> #   symptoms <chr>, episode_present_flag <chr>, episode_number <int>, #> #   episode_start <date>, episode_end <date> ## Not run in vignette ... ## ## these are examples of text matching failures ##  ## exact text matching ## test2 <- cg_annotate_episodes_find(small_study_inf,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"Pos\", \"Post\", \"^mild\") ) summary(test2$episode_number)  ## empty strings will error (as they otherwise match everything) ## test3a <- cg_annotate_episodes_find(small_study_inf,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"\") )  ## a 'random' string will not error ## test3b <- cg_annotate_episodes_find(small_study_inf,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"a\") )"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"variant-calling","dir":"Articles","previous_headings":"","what":"Variant calling","title":"Annotating infection episodes","text":"SARS-CoV-2 studies, often desirable report infecting variant. fundamental approach : “viral sequencing result trumps inference based S gene target failure (SGTF) trumps inference based date symptoms (LFT) .” However, four ways becomes complex wild: Available data studies symptom diaries, SGTF data (perhaps PCR positive/negative, used LFTs) studies sequence least one swab infection episode. Chronogram mandate presence data. Sequencing tools, results, develop time new variants evolve, emerge sequenced enough numbers assigned lineage designations, PANGO scorpio definitions need revised. scorpio uses “constellations” sentinel (“lineage defining”) SNPs, scorpio defintion can take little longer released, PANGO bleeding-edge. Therefore XBB.1.5, example, might called XBB.1.5 PANGO Omicron-BA.2 like scorpio. studies want final assigned variant XBB.1.5. Conversely, many investigators want group Delta rather AY.42 B.1.617.2. solvable chronogram, hard-coded approach (isn’t one-size-fits-solution). external inference data changes time example, assigning Alpha vs Delta based date alone UK pretty straightforward today, large amount sequences available. time challenging. 2023, assigning variants based date UK challenging - >10 Omicron sub-variants co-circulating. Chronogram assume can end user. returned data map calendar date Chronogram, data entry, variant identification (PANGO==XBB.1.5), timestamped calendar date swab taken. investigator want XBB.1.5 variant call associated entire episode (consider: XBB.1.5+ve sequence result d0, symptoms d-5 LFT+ve d-4, XBB.1.5 episode spanning d-5 d0). Though data might scattered across different rows Chronogram, researcher interpret single XBB.1.5 episode spanned d-5 d0. Chronogram offers flexible way address point 4 .e. tracking data calendar date. point 1, requires unique coing. solution tailed study’s dataset. 2+3, study specific solutions required, contemporaneous studies (eg latest vaccine protect current variant?), rolling review strategy required.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"variant-dataset","dir":"Articles","previous_headings":"Variant calling","what":"Variant dataset","title":"Annotating infection episodes","text":"Returning small example study, now SGTF data . Dates episodes updated plausibly Ancestral infection S gene presence, Alpha infection SGTF. First, build chronogram previously. Next, define new column episode_filled_SGTF first non-NA value SGTF within episode (solving issue 4 ).","code":"## Simulate some variant data ## variants_to_add <- tibble::tribble(   ~calendar_date, ~elig_study_id, ~LFT, ~PCR, ~SGTF, ~symptoms,   \"01062020\", \"1\", \"pos\", NA, \"S present\", NA,   \"01022021\", \"1\", NA, NA, NA, \"severe\",   \"11022021\", \"1\", \"pos\", NA, \"S fail\", \"severe\" )  ## Make calendar_date a date ## variants_to_add$calendar_date <- lubridate::dmy(   variants_to_add$calendar_date ) ## add to chronogram ## small_study.variants <- cg_add_experiment(small_study, variants_to_add)  small_study.variants <- cg_annotate_episodes_find(small_study.variants,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"^severe\") ) #> Parsed: infection_cols and infection_present #>            #> Searching in the [[column]], for the \"text\": #> stringr::str_detect(.data[[\"LFT\"]], \"pos\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"PCR\"]], \"Post\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"symptoms\"]], \"^severe\") ~ \"yes\" #>  #>  #> ...detecting will be exact. #>           Capitals, spelling etc must be precise #> calendar_date elig_study_id episode_number #> Joining with `by = join_by(calendar_date, elig_study_id)`"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"fill-episode-data","dir":"Articles","previous_headings":"Variant calling","what":"Fill episode data","title":"Annotating infection episodes","text":"Within episode, “spread” experimental result every row. tidyverse, performed tidyr::fill(), adopted similar name chronogram function. Tidyr::fill() argument .direction allows filling upwards downwards (one ). useful several results: eg. S gene may present first swab episode, infection cleared PCR negative, second swab show SGTF (also negative PCR products). Using earliest, S gene present result useful. However, instances, example burden viral polymorphisms, may peak last measurement episode. .direction passed onwards wrapped tidyr::fill(). variant identifying assay needs filled .","code":"small_study.variants <- cg_annotate_episodes_fill(small_study.variants,   col_to_fill = SGTF,   col_to_return = episode_filled_SGTF,   .direction = \"downup\",   episode_numbers_col = episode_number ) #> Joining with `by = join_by(elig_study_id, episode_number)`  small_study.variants$episode_filled_SGTF #>    [1] NA          NA          NA          NA          NA          NA          #>    [7] NA          NA          NA          NA          NA          NA          #>   [13] NA          NA          NA          NA          NA          NA          #>   [19] NA          NA          NA          NA          NA          NA          #>   [25] NA          NA          NA          NA          NA          NA          #>   [31] NA          NA          NA          NA          NA          NA          #>   [37] NA          NA          NA          NA          NA          NA          #>   [43] NA          NA          NA          NA          NA          NA          #>   [49] NA          NA          NA          NA          NA          NA          #>   [55] NA          NA          NA          NA          NA          NA          #>   [61] NA          NA          NA          NA          NA          NA          #>   [67] NA          NA          NA          NA          NA          NA          #>   [73] NA          NA          NA          NA          NA          NA          #>   [79] NA          NA          NA          NA          NA          NA          #>   [85] NA          NA          NA          NA          NA          NA          #>   [91] NA          NA          NA          NA          NA          NA          #>   [97] NA          NA          NA          NA          NA          NA          #>  [103] NA          NA          NA          NA          NA          NA          #>  [109] NA          NA          NA          NA          NA          NA          #>  [115] NA          NA          NA          NA          NA          NA          #>  [121] NA          NA          NA          NA          NA          NA          #>  [127] NA          NA          NA          NA          NA          NA          #>  [133] NA          NA          NA          NA          NA          NA          #>  [139] NA          NA          NA          NA          NA          NA          #>  [145] NA          NA          NA          NA          NA          NA          #>  [151] NA          NA          \"S present\" NA          NA          NA          #>  [157] NA          NA          NA          NA          NA          NA          #>  [163] NA          NA          NA          NA          NA          NA          #>  [169] NA          NA          NA          NA          NA          NA          #>  [175] NA          NA          NA          NA          NA          NA          #>  [181] NA          NA          NA          NA          NA          NA          #>  [187] NA          NA          NA          NA          NA          NA          #>  [193] NA          NA          NA          NA          NA          NA          #>  [199] NA          NA          NA          NA          NA          NA          #>  [205] NA          NA          NA          NA          NA          NA          #>  [211] NA          NA          NA          NA          NA          NA          #>  [217] NA          NA          NA          NA          NA          NA          #>  [223] NA          NA          NA          NA          NA          NA          #>  [229] NA          NA          NA          NA          NA          NA          #>  [235] NA          NA          NA          NA          NA          NA          #>  [241] NA          NA          NA          NA          NA          NA          #>  [247] NA          NA          NA          NA          NA          NA          #>  [253] NA          NA          NA          NA          NA          NA          #>  [259] NA          NA          NA          NA          NA          NA          #>  [265] NA          NA          NA          NA          NA          NA          #>  [271] NA          NA          NA          NA          NA          NA          #>  [277] NA          NA          NA          NA          NA          NA          #>  [283] NA          NA          NA          NA          NA          NA          #>  [289] NA          NA          NA          NA          NA          NA          #>  [295] NA          NA          NA          NA          NA          NA          #>  [301] NA          NA          NA          NA          NA          NA          #>  [307] NA          NA          NA          NA          NA          NA          #>  [313] NA          NA          NA          NA          NA          NA          #>  [319] NA          NA          NA          NA          NA          NA          #>  [325] NA          NA          NA          NA          NA          NA          #>  [331] NA          NA          NA          NA          NA          NA          #>  [337] NA          NA          NA          NA          NA          NA          #>  [343] NA          NA          NA          NA          NA          NA          #>  [349] NA          NA          NA          NA          NA          NA          #>  [355] NA          NA          NA          NA          NA          NA          #>  [361] NA          NA          NA          NA          NA          NA          #>  [367] NA          NA          NA          NA          NA          NA          #>  [373] NA          NA          NA          NA          NA          NA          #>  [379] NA          NA          NA          NA          NA          NA          #>  [385] NA          NA          NA          NA          NA          NA          #>  [391] NA          NA          NA          NA          NA          NA          #>  [397] NA          \"S fail\"    \"S fail\"    \"S fail\"    \"S fail\"    \"S fail\"    #>  [403] \"S fail\"    \"S fail\"    \"S fail\"    \"S fail\"    \"S fail\"    \"S fail},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"assign-episode-data","dir":"Articles","previous_headings":"Variant calling","what":"Assign episode data","title":"Annotating infection episodes","text":"Now can use case_when() within group id + episode_number. case_when() straightforward. use PANGO SGTF? HINT case_when(!.na(episode_filled_PANGO) ~ episode_filled_PANGO, ...) adjust emergence Delta, study without viral sequencing? (S present). HINT case_when(str_detect(episode_filled_SGTF, \"S present\") & calendar_date > lubridate::dmy(\"01092021\") ~ \"Delta\", ...)","code":"small_study.variants <- small_study.variants %>%   mutate(episode_variant = case_when(     str_detect(episode_filled_SGTF, \"S present\") ~ \"Ancestral\",     str_detect(episode_filled_SGTF, \"S fail\") ~ \"Alpha\"   ))   ## How many days are each episode? ## ## Alpha = 11 days long; Ancestral = 1 day long ## small_study.variants %>%   group_by(elig_study_id, episode_number, episode_variant) %>%   tally() #> # A tibble: 5 × 4 #> # Groups:   elig_study_id, episode_number [5] #>   elig_study_id episode_number episode_variant     n #>   <fct>                  <int> <chr>           <int> #> 1 1                          1 Ancestral           1 #> 2 1                          2 Alpha              11 #> 3 1                         NA NA                637 #> 4 2                         NA NA                649 #> 5 3                         NA NA                649"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Annotating infection episodes","text":"added infection data chronogram, summarised variant calls, flexible scalable logic.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotate_episodes.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"Annotating infection episodes","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] chronogram_1.0.0 stringr_1.5.1    dplyr_1.1.4      #>  #> loaded via a namespace (and not attached): #>  [1] jsonlite_1.8.8    compiler_4.4.1    tidyselect_1.2.1  tidyr_1.3.1       #>  [5] jquerylib_0.1.4   systemfonts_1.1.0 textshaping_0.4.0 yaml_2.3.9        #>  [9] fastmap_1.2.0     lobstr_1.1.2      R6_2.5.1          generics_0.1.3    #> [13] knitr_1.48        tibble_3.2.1      desc_1.4.3        lubridate_1.9.3   #> [17] bslib_0.7.0       pillar_1.9.0      rlang_1.1.4       utf8_1.2.4        #> [21] cachem_1.1.0      stringi_1.8.4     xfun_0.45         fs_1.6.4          #> [25] sass_0.4.9        timechange_0.3.0  cli_3.6.3         withr_3.0.0       #> [29] pkgdown_2.1.0     magrittr_2.0.3    digest_0.6.36     lifecycle_1.0.4   #> [33] vctrs_0.6.5       evaluate_0.24.0   glue_1.7.0        ragg_1.3.2        #> [37] fansi_1.0.6       rmarkdown_2.27    purrr_1.0.2       tools_4.4.1       #> [41] pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Chronogram annotation","text":"chronogram package provides family functions annotate chronogram. start cg_annotate_. vignette explains use annotation functions. using vignette, consult vignette(\"assembly\").","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Chronogram annotation","text":"use example pre-built chronogram, introduced vignette(\"assembly\"), add example infection data.","code":"library(chronogram) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(patchwork) data(built_smallstudy) cg <- built_smallstudy$chronogram  ## Simulate some infection data ## infections_to_add <- tibble::tribble(   ~calendar_date, ~elig_study_id, ~LFT, ~PCR, ~symptoms,   \"01102020\", \"1\", \"pos\", \"not tested\", NA,   \"11102020\", \"1\", \"pos\", NA, \"severe\",   \"11042021\", \"2\", \"pos\", \"not tested\", \"mild\",   \"11082021\", \"2\", \"pos\", \"Pos\", \"mild\",   \"11112021\", \"2\", \"pos\", \"Pos\", NA ) ## Make calendar_date a date ## infections_to_add$calendar_date <- lubridate::dmy(   infections_to_add$calendar_date ) ## add to chronogram cg <- cg_add_experiment(   cg,   infections_to_add )"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"outline","dir":"Articles","previous_headings":"","what":"Outline","title":"Chronogram annotation","text":"Annotation required allow selection sub-cohorts individuals (corresponding dates) relevant test biological hypothesis.","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"for-vaccines-use-cg_annotate_vaccines_count","dir":"Articles","previous_headings":"Outline > The annotation process","what":"1. For vaccines, use cg_annotate_vaccines_count()","title":"Chronogram annotation","text":"– adds column counts number vaccines participant received time. – includes “star” system, allow first days vaccine easily identified. example, 24hrs first dose vaccine (“1star”) probably biologically reflect dose’s effect. user can set value days “star” suit analysis.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"for-episodes-use-the-cg_annotate_episodes_-family","dir":"Articles","previous_headings":"Outline > The annotation process","what":"2. For episodes, use the cg_annotate_episodes_ family","title":"Chronogram annotation","text":"perform sequential steps: cg_annotate_episodes_find() used identify episodes infection. reads across several different experiment data types, specified function call: eg. symptoms, PCRs, LFTs SARS-CoV-2. Additionally, cg_annotate_episodes_find() looks backwards forwards time find episodes, commonly molecular testing symptoms commence day. studies, seroconversion method finding episodes (eg seroconversion anti-N IgG SARS-CoV-2). Seroconversion episodes can found cg_annotate_episodes_find_seroconversion(). provide different (often much, much larger) uncertainty around episode start, chronogram handles separate function. cg_annotate_episodes_fill() allow filling specific columns episode (details ). count number episodes (cf cg_annotate_vaccines_count())","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"for-exposures-use-cg_exposure_count-and-cg_antigenic_history","dir":"Articles","previous_headings":"Outline > The annotation process","what":"3. For exposures, use cg_exposure_count() and cg_antigenic_history()","title":"Chronogram annotation","text":"Exposures can either vaccine doses infection episodes. function provides cumulative counter individual’s personal history.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"annotating-vaccines","dir":"Articles","previous_headings":"","what":"1. Annotating vaccines","title":"Chronogram annotation","text":"cg_annotate_vaccines_count() requires metadata columns follow pattern: dose_1, dose_2, dose_3, …, dose_i date_dose_1, date_dose_2, date_dose_3, …, date_dose_i {dose} {date_dose} prefixes provided function, shown chunk . might envisage study {sarscov2_dose}, {sarscov2_date_dose}, {influenza_dose} & {influenza_date_dose} two runs cg_annotate_vaccines_count() needed.  plot, character vector dose_number coerced factor. resulting levels factor counter-intuitive. improve plot, can manually specify factor:  dose_number column retained character vector rather converting factor. possibility mishandling factor: .numeric(dose_number) == 2, refers situation dose == 1.","code":"cg1 <- cg_annotate_vaccines_count(   cg,   ## the prefix to the dose columns: ##   dose = dose,   ## the output column name: ##   dose_counter = dose_number,   ## the prefix to the date columns: ##   vaccine_date_stem = date_dose,   ## use 14d to 'star' after a dose ##   intermediate_days = 14 ) #> Using stem: date_dose #> Found vaccine dates #> date_dose_1 #>  #> date_dose_2  ## plot over time ## cg1 %>%   ggplot(     aes(       x = calendar_date,       y = elig_study_id,       fill = dose_number     )   ) +   geom_tile(height = 0.5) +   scale_fill_grey(end = 0.2, start = 0.8) +   theme_bw() cg1 %>%   mutate(dose_number = factor(dose_number,     levels = c(       \"0\",       \"1star\",       \"1\",       \"2star\",       \"2\"     )   )) %>%   ggplot(     aes(       x = calendar_date,       y = elig_study_id,       fill = dose_number     )   ) +   geom_tile(height = 0.5) +   scale_fill_grey(end = 0.2, start = 0.8) +   theme_bw()"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"annotating-episodes","dir":"Articles","previous_headings":"","what":"2. Annotating episodes","title":"Chronogram annotation","text":"first step find episodes using cg_annotate_episodes_find()  Note participant 1 single infection episode November 2020: use shorter time frame look forwards backwards :  episode_days option sets “gap” look , rather total permitted length episode. example, LFT+ve d-6, symptoms d0, PCR+ d7 collected single episode. Next, assign variants. one-size-fits approach holds across pathogens, across studies, across geographic regions. example PCR data available, parse : PCR positivity assign Delta, PCR testing assign Ancestral/Alpha. gives variant call single row cg. can use cg_annotate_episodes_fill() add annotation every row infection episode. Variant calling rarely relies single assay. advocate pragmatic tiered approach. viral sequencing results available use ; PCR (± S gene target failure), use ; absence molecular testing compare episode start dates prevailing variant trends. Give episode_variant_by_seq, episode_variant_by_PCR episode_variant_by_date, fill *_filled whole episode. apply case_when() combine episode_variant_by_seq_filled, episode_variant_by_PCR_filled episode_variant_by_date_filled. adopt episode_variant_summarised combined, overall assignment, user free change. Sequencing interpretation sub-discipline, simplified vignette. SARS-CoV-2, two main methods assigning variant: PANGO scorpio, , occasion, report different lineages particularly newly emerging viruses. keep : episode_variant_by_pango episode_variant_by_scorpio. Finally, can count number episodes individual experienced.","code":"cg2 <- cg_annotate_episodes_find(   cg1,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"^severe\") ) #> Parsed: infection_cols and infection_present #>            #> Searching in the [[column]], for the \"text\": #> stringr::str_detect(.data[[\"LFT\"]], \"pos\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"PCR\"]], \"Post\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"symptoms\"]], \"^severe\") ~ \"yes\" #>  #>  #> ...detecting will be exact. #>           Capitals, spelling etc must be precise #> calendar_date elig_study_id episode_number #> Joining with `by = join_by(calendar_date, elig_study_id)`  cg2 %>%   mutate(dose_number = factor(dose_number,     levels = c(\"0\", \"1star\", \"1\", \"2star\", \"2\")   )) %>%   ggplot(     aes(       x = calendar_date,       y = elig_study_id,       fill = dose_number     )   ) +   geom_tile(height = 0.5) +   ## now add text to show when episodes occur ##   geom_text(     aes(label = episode_number),     data = . %>%       group_by(elig_study_id, episode_number) %>%       slice_head(),     col = \"red\", show.legend = FALSE   ) +   scale_fill_grey(end = 0.2, start = 0.8) +   theme_bw() #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_text()`). infections_to_add %>%   filter(elig_study_id == 1) %>%   knitr::kable() cg3 <- cg_annotate_episodes_find(   cg1,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"^severe\"),   ## change episode days interval to 7 days ##   episode_days = 7 ) #> Parsed: infection_cols and infection_present #>            #> Searching in the [[column]], for the \"text\": #> stringr::str_detect(.data[[\"LFT\"]], \"pos\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"PCR\"]], \"Post\") ~ \"yes\" #>  #> stringr::str_detect(.data[[\"symptoms\"]], \"^severe\") ~ \"yes\" #>  #>  #> ...detecting will be exact. #>           Capitals, spelling etc must be precise #> calendar_date elig_study_id episode_number #> Joining with `by = join_by(calendar_date, elig_study_id)`  cg3 %>%   mutate(dose_number = factor(dose_number,     levels = c(\"0\", \"1star\", \"1\", \"2star\", \"2\")   )) %>%   ggplot(     aes(       x = calendar_date,       y = elig_study_id,       fill = dose_number     )   ) +   geom_tile(height = 0.5) +   ## now add text to show when episodes occur ##   geom_text(     aes(label = episode_number),     data = . %>%       group_by(elig_study_id, episode_number) %>%       slice_head(),     col = \"red\", show.legend = FALSE   ) +   scale_fill_grey(end = 0.2, start = 0.8) +   theme_bw() #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_text()`). cg4 <- cg2 %>%   mutate(     episode_variant =       case_when(         # \"is an episode\" & \"PCR positive\" -> Delta #         (!is.na(episode_number)) & PCR == \"Pos\" ~ \"Delta\",         # \"is an episode\" & \"PCR unavailable\" -> Anc/Delta #         (!is.na(episode_number)) & PCR == \"not tested\" ~ \"Anc/Alpha\"       )   ) cg4 %>%   filter(!is.na(episode_variant)) %>%   pull(episode_variant) #> [1] \"Anc/Alpha\" \"Anc/Alpha\" \"Delta\" cg4 <- cg4 %>%   cg_annotate_episodes_fill(     col_to_fill = episode_variant,     col_to_return = episode_variant_filled,     .direction = \"updown\",     episode_numbers_col = episode_number   ) #> Joining with `by = join_by(elig_study_id, episode_number)`   cg4 %>%   filter(!is.na(episode_variant_filled)) %>%   pull(episode_variant_filled) #>  [1] \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" #>  [7] \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" \"Anc/Alpha\" #> [13] \"Delta\" cg4 %>%   cg_annotate_episodes_count() %>%   pull(count_col) #>    [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>   [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>   [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [223] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [334] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [408] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [445] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [556] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [667] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [704] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [741] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [778] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [815] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [852] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [889] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [926] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [963] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1000] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1037] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1074] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1111] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1148] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1185] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1222] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1259] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #> [1296] 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1333] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1370] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1407] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1444] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1481] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1518] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1555] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1592] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1629] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1666] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1703] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1740] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1777] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1814] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1851] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1888] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #> [1925] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"annotating-exposures","dir":"Articles","previous_headings":"","what":"3. Annotating exposures","title":"Chronogram annotation","text":"Annotation exposures cumulative sum infection + vaccination histories. annotations provided cg_exposure_count() cg_antigenic_history(). cg_exposure_count() takes column names episode number, dose number seroconversion episode numbers, calculate per day, per individual running count exposures. cg_annotate_antigenic_history() provides character vector length 1 summarise person’s course study. best explored example, plot.  plot shows infection, vaccination impacts exposure number. participant 3, exposures vaccination, whereas participants 1 2 additional exposures infection. end example, participant 2 experienced 4 encounters Spike, participant 1 3 encounters participant 3 just two vaccination alone.","code":"cg_exposures <- cg4 %>% cg_annotate_exposures_count(   episode_number = episode_number,   dose_number = dose_number,   ## we have not considered episodes of seroconversion   N_seroconversion_episode_number = NULL )   cg_exposures <- cg_exposures %>%   mutate(     episode_variant_summarised =       episode_variant_filled   ) %>%   cg_annotate_antigenic_history(     episode_number = episode_number,     dose_number = dose_number,     episode_variant_summarised = episode_variant_summarised,     ag_col = antigenic_history   )  ## Plot ## top_panel <- cg_exposures %>%   select(calendar_date,           exposure_number,          elig_study_id,          antigenic_history) %>%   ggplot(aes(     x = calendar_date, y = exposure_number,     col = elig_study_id   )) +   geom_line() +   facet_grid(antigenic_history ~ .)   swimmers_panel <- cg_plot_meta(cg_exposures,   visit = serum_Ab_S ) +   ## set the axes to match top_panel ##   xlim(     min(cg_exposures$calendar_date),     max(cg_exposures$calendar_date)   ) +   scale_y_discrete(limits = factor(c(3, 2, 1))) #> Function provided to illustrate chronogram -> #>           ggplot2 interface. #> Function assumes the #>           presence of {dose_1, date_dose_1, dose_2, date_dose_2} #>           columns. #>           Users are likely to want to write their own, #>           study-specific applications  top_panel / swimmers_panel & theme_bw() &   theme(     legend.position = \"bottom\",     strip.text.y = element_text(angle = 0),     strip.background = element_blank()   )"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Chronogram annotation","text":"vignette provided examples cg_annotate family action. conducting multi-pathogen study (RSV, flu, covid), run set cg_annotate family functions pathogen - may wish prefix output columns eg RSV_, flu_ & covid_. differing considerations eg variants, chronogram leaves cg_annotate family without overall wrapper let users easily omit unneeded annotations.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/annotation.html","id":"sessioninfo","dir":"Articles","previous_headings":"Summary","what":"SessionInfo","title":"Chronogram annotation","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] patchwork_1.2.0  ggplot2_3.5.1    dplyr_1.1.4      chronogram_1.0.0 #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5      jsonlite_1.8.8    highr_0.11        compiler_4.4.1    #>  [5] tidyselect_1.2.1  stringr_1.5.1     tidyr_1.3.1       jquerylib_0.1.4   #>  [9] systemfonts_1.1.0 scales_1.3.0      textshaping_0.4.0 yaml_2.3.9        #> [13] fastmap_1.2.0     R6_2.5.1          labeling_0.4.3    generics_0.1.3    #> [17] knitr_1.48        tibble_3.2.1      desc_1.4.3        munsell_0.5.1     #> [21] lubridate_1.9.3   bslib_0.7.0       pillar_1.9.0      rlang_1.1.4       #> [25] utf8_1.2.4        stringi_1.8.4     cachem_1.1.0      xfun_0.45         #> [29] fs_1.6.4          sass_0.4.9        timechange_0.3.0  cli_3.6.3         #> [33] pkgdown_2.1.0     withr_3.0.0       magrittr_2.0.3    digest_0.6.36     #> [37] grid_4.4.1        lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.24.0   #> [41] glue_1.7.0        farver_2.1.2      ragg_1.3.2        fansi_1.0.6       #> [45] colorspace_2.1-0  purrr_1.0.2       rmarkdown_2.27    tools_4.4.1       #> [49] pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Chronogram assembly","text":"chronogram offers dynamic solution real world datasets, limited particular pathogen, vaccine schedule, experimental assay. core functionality chronogram ability expand dates dataset, constructing comprehensive chronological list. structure can prove invaluable, especially scenarios pinpointing precise timepoints essential. , provide illustration incorporate data chronogram. adapted study, code can used extended subsequent data assays become available.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TLDR","title":"Chronogram assembly","text":"","code":"data(smallstudy)  cg <- cg_assemble(   start_date = \"01012020\",   end_date = \"10102021\",   ## the provided metadata ##   metadata = smallstudy$small_study_metadata,   ## the column name in the metadata that contains participant IDs ##   metadata_ids_col = elig_study_id,   ## column name for dates ##   calendar_date_col = calendar_date,   ## the provided experiment data (we have 1 assay, so a list of 1) ##   experiment_data_list = list(smallstudy$small_study_Ab) ) #> Checking input parameters... #> -- checking start date 01012020 #> -- checking end date 10102021 #> -- checking end date later than start date #> -- checking metadata #> -- checking experiment data list #> --- checking experiment data list slot 1 #> Input checks completed #> Chronogram assembling... #> -- chrongram_skeleton built #> -- chrongram built with metadata #> -- adding experiment data #> --- adding experiment data slot 1 cols... elig_study_id calendar_date serum_Ab_S ...  ## Use cg_add_experiment() for extra assays ##  ## cg_save() and cg_load() offer a route to save to disk ## ## - metadata de-duplicated on disk & cg_load check object ## ## - save() and load() will work but not encouraged ##"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"requirements","dir":"Articles","previous_headings":"","what":"Requirements","title":"Chronogram assembly","text":"five required inputs: list participant study IDs start date end date metadata, stored identifier #1. Experimental data, stored identifier #1 date sample. NOTE start date, end date earliest latest data available. example, study collected information prior symptoms enrolment, want include analysis, use suitably early start date. list study IDs provided column metadata (experimental data). clarity, show separately. limits number experimental data sources.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"in-brief","dir":"Articles","previous_headings":"","what":"In brief","title":"Chronogram assembly","text":"cg_assemble() wraps following functions. use functions focus rest vignette.","code":"## Fictional example data ## data(smallstudy)  ## 5 requirements ## ids <- smallstudy$small_study_ids  start <- \"01012020\" end <- \"10102021\"  meta <- smallstudy$small_study_metadata ab <- smallstudy$small_study_Ab # here, we just have antibody data   ## Make a chronogram ## small_study <- chronogram_skeleton(   ids = ids,   start_date = start,   end_date = end,   ## change this to your ID column name ##   col_ids = elig_study_id,   ## change this to your date column name ##   col_calendar_date = calendar_date )  small_study <- chronogram(   small_study,   meta )  small_study <- cg_add_experiment(   small_study,   ab )  small_study #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Contains:      3  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      649 - 649 days [min-max per participant] #>  Metadata:      age, sex, dose_1, date_dose_1, dose_2, date_dose_2  #>  Size:          129.55 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 10 #>    calendar_date elig_study_id   age sex   dose_1 date_dose_1 dose_2 date_dose_2 #>  * <date>        <fct>         <dbl> <fct> <fct>  <date>      <fct>  <date>      #>  1 2020-01-01    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  2 2020-01-02    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  3 2020-01-03    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  4 2020-01-04    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  5 2020-01-05    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  6 2020-01-06    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  7 2020-01-07    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  8 2020-01-08    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  9 2020-01-09    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> 10 2020-01-10    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> # ℹ 1,937 more rows #> # ℹ 2 more variables: serum_Ab_S <dbl>, serum_Ab_N <dbl>  ## Use cg_add_experiment() for extra assays ##"},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"generate-a-chronogram_skeleton-object","dir":"Articles","previous_headings":"Step-by-step","what":"Generate a chronogram_skeleton object","title":"Chronogram assembly","text":"chronogram_skeleton() helper function creates object : - contains two columns: calendar_date (name set col_calendar_date), elig_study_id (name set col_ids). - contains row participant day. comes print format, allow manual checking generated expected results. may want try: View(small_study) via Rstudio. chronogram_skeleton framework onto add metadata, experimental data. provided col_ids col_calendar_date stored attributes small_study, user enter . Chronogram assumes adding data indexed column names. NOTE study may data stored ‘StudyID’ ‘PID’ etc. fine: adjust col_ids = use_whatever_your_StudyID_is. Similarly, study may use ‘date’, ‘date_on_mars’. Adjust: col_calendar_date = use_whatever_your_Study_uses_for_dates. Dates ddmmyyyy format (anything lubridate::dmy() can interpret work). Providing dates formats likely fail error. special case US formatted dates dd<=12 mm<=12: interpreted 12-day interval. Swap ddmmyyy get expected 11 months:","code":"## Fictional example data ## data(smallstudy)  ## 5 requirements ## ids <- smallstudy$small_study_ids  start <- \"01012020\" end <- \"10102021\"  meta <- smallstudy$small_study_metadata ab <- smallstudy$small_study_Ab # here, we just have antibody data   ## Make a chronogram_skeleton ## small_study <- chronogram_skeleton(   ids = ids,   start_date = start,   end_date = end,   ## change this to your ID column name ##   col_ids = elig_study_id,   ## change this to your date column name ##   col_calendar_date = calendar_date ) small_study #> A chronogram skeleton: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Spanning:      649  days #>  Contains:      3  unique participant IDs #>  Size:          25.69 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 2 #>    calendar_date elig_study_id #>  * <date>        <fct>         #>  1 2020-01-01    1             #>  2 2020-01-02    1             #>  3 2020-01-03    1             #>  4 2020-01-04    1             #>  5 2020-01-05    1             #>  6 2020-01-06    1             #>  7 2020-01-07    1             #>  8 2020-01-08    1             #>  9 2020-01-09    1             #> 10 2020-01-10    1             #> # ℹ 1,937 more rows chronogram_skeleton(   ids = ids,   start_date = \"01012020\",   ## 1st Dec 2020, provided in mmddyyyy ##   end_date = \"12012020\",   col_ids = elig_study_id,   col_calendar_date = calendar_date ) #> A chronogram skeleton: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2020-01-12  #>  Spanning:      12  days #>  Contains:      3  unique participant IDs #>  Size:          2.75 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 36 × 2 #>    calendar_date elig_study_id #>  * <date>        <fct>         #>  1 2020-01-01    1             #>  2 2020-01-02    1             #>  3 2020-01-03    1             #>  4 2020-01-04    1             #>  5 2020-01-05    1             #>  6 2020-01-06    1             #>  7 2020-01-07    1             #>  8 2020-01-08    1             #>  9 2020-01-09    1             #> 10 2020-01-10    1             #> # ℹ 26 more rows chronogram_skeleton(   ids = ids,   start_date = \"01012020\",   ## 1st Dec 2020, provided in the correct ddmmyyyy ##   end_date = \"01122020\",   col_ids = elig_study_id,   col_calendar_date = calendar_date ) #> A chronogram skeleton: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2020-12-01  #>  Spanning:      336  days #>  Contains:      3  unique participant IDs #>  Size:          14.42 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,008 × 2 #>    calendar_date elig_study_id #>  * <date>        <fct>         #>  1 2020-01-01    1             #>  2 2020-01-02    1             #>  3 2020-01-03    1             #>  4 2020-01-04    1             #>  5 2020-01-05    1             #>  6 2020-01-06    1             #>  7 2020-01-07    1             #>  8 2020-01-08    1             #>  9 2020-01-09    1             #> 10 2020-01-10    1             #> # ℹ 998 more rows"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"generate-a-chronogram-object","dir":"Articles","previous_headings":"Step-by-step","what":"Generate a chronogram object","title":"Chronogram assembly","text":", combine outline data structure (chronogram_skeleton object) metadata. line metadata repeated every row individual. shortcut providing useful selecting samples meet particular characteristics (eg antibody testing 14-21d dose 2) plotting based characteristics. extra memory occupied repetition ~25-50kB example. metadata contains age, sex, dates formulations doses 1 2 (values plausible, fictitious). provided metadata tibble, care taken provide columns relevant classes (factors, dates etc). assembly chronogram join chronogram_skeleton metadata.","code":"head(meta) #> # A tibble: 3 × 7 #>   elig_study_id   age sex   dose_1   date_dose_1 dose_2   date_dose_2 #>           <dbl> <dbl> <fct> <fct>    <date>      <fct>    <date>      #> 1             1    40 F     AZD1222  2021-01-05  AZD1222  2021-02-05  #> 2             2    45 F     BNT162b2 2021-01-05  BNT162b2 2021-02-05  #> 3             3    35 M     BNT162b2 2021-01-10  BNT162b2 2021-03-10 small_study <- chronogram(   small_study,   meta ) small_study #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Contains:      3  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      649 - 649 days [min-max per participant] #>  Metadata:      age, sex, dose_1, date_dose_1, dose_2, date_dose_2  #>  Size:          98.05 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 8 #>    calendar_date elig_study_id   age sex   dose_1 date_dose_1 dose_2 date_dose_2 #>  * <date>        <fct>         <dbl> <fct> <fct>  <date>      <fct>  <date>      #>  1 2020-01-01    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  2 2020-01-02    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  3 2020-01-03    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  4 2020-01-04    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  5 2020-01-05    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  6 2020-01-06    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  7 2020-01-07    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  8 2020-01-08    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  9 2020-01-09    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> 10 2020-01-10    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> # ℹ 1,937 more rows"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"add-experimental-data-to-chronogram-object","dir":"Articles","previous_headings":"Step-by-step","what":"Add experimental data to chronogram object","title":"Chronogram assembly","text":"experimental data provided serum anti-S IgG serum anti-N IgG (: plausible, fictitious). experimental data provided study ID calendar date. data joined variables: column names must match exactly main chronogram. date use date sample, rather assay date (may months years later sample frozen). wary duplicates shared columns adding experimental data - warning provided shared columns. going add just one set experimental data, limit number experiments add. process assumes runs assay added . example, 10 runs anti-S anti-N (.e. 10 objects looked like ab), combine bind_rows() make one long object proceed cg_add_experiment(). might run assay several different materials, anti-S anti-N IgG testing serum mucosal sampling. Labelling data columns system like source_test_type (eg serum_Ab_S vs nasal_Ab_S vs BAL_Ab_S etc) advantageous, makes analysis easier. wanted grab S IgG data, perhaps pass ggplot2, can use small.study %>% select(contains(\"Ab_S\")). mandatory, can still build whatever column names like (aside col_ids col_calendar_date required). complex data reduced single entry (eg. scRNAseq data), adding column like: PBMC_scRNAseq = run/not_run, useful can handily subset final chronogram object looks like colData annData Bioconductor’s 10x analysis, Seurat, scanpy: small_study %>% filter(PBMC_scRNAseq == \"run\"). data already SQL (similar) database, consider using dbplyr generate metadata tibble experimental data tibbles.","code":"head(ab) #> # A tibble: 6 × 4 #>   elig_study_id calendar_date serum_Ab_S serum_Ab_N #>           <dbl> <date>             <dbl>      <dbl> #> 1             1 2021-01-05           500        100 #> 2             1 2021-01-15          4000        100 #> 3             1 2021-02-03          3750        100 #> 4             1 2021-02-15         10000        100 #> 5             2 2021-01-05             0          0 #> 6             2 2021-01-15          2000          0 small_study <- cg_add_experiment(   small_study,   ab )  small_study #> A chronogram: #>  Dates column:  calendar_date  #>  IDs column:    elig_study_id  #>  Starts on:     2020-01-01  #>  Ends on:       2021-10-10  #>  Contains:      3  unique participant IDs #>  Windowed:      FALSE  #>  Spanning:      649 - 649 days [min-max per participant] #>  Metadata:      age, sex, dose_1, date_dose_1, dose_2, date_dose_2  #>  Size:          129.55 kB  #>  Pkg_version:   1.0.0 [used to build this cg] #>  #> # A tibble: 1,947 × 10 #>    calendar_date elig_study_id   age sex   dose_1 date_dose_1 dose_2 date_dose_2 #>  * <date>        <fct>         <dbl> <fct> <fct>  <date>      <fct>  <date>      #>  1 2020-01-01    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  2 2020-01-02    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  3 2020-01-03    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  4 2020-01-04    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  5 2020-01-05    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  6 2020-01-06    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  7 2020-01-07    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  8 2020-01-08    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #>  9 2020-01-09    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> 10 2020-01-10    1                40 F     AZD12… 2021-01-05  AZD12… 2021-02-05  #> # ℹ 1,937 more rows #> # ℹ 2 more variables: serum_Ab_S <dbl>, serum_Ab_N <dbl>  ## Use cg_add_experiment() for extra assays ##"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Chronogram assembly","text":"constructed chronogram small study n=3 individuals simple set metadata single experimental assay.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/assembly.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"Chronogram assembly","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] chronogram_1.0.0 lubridate_1.9.3  dplyr_1.1.4      #>  #> loaded via a namespace (and not attached): #>  [1] jsonlite_1.8.8    compiler_4.4.1    tidyselect_1.2.1  tidyr_1.3.1       #>  [5] jquerylib_0.1.4   systemfonts_1.1.0 textshaping_0.4.0 yaml_2.3.9        #>  [9] fastmap_1.2.0     R6_2.5.1          lobstr_1.1.2      generics_0.1.3    #> [13] knitr_1.48        tibble_3.2.1      desc_1.4.3        bslib_0.7.0       #> [17] pillar_1.9.0      rlang_1.1.4       utf8_1.2.4        cachem_1.1.0      #> [21] xfun_0.45         fs_1.6.4          sass_0.4.9        timechange_0.3.0  #> [25] cli_3.6.3         pkgdown_2.1.0     withr_3.0.0       magrittr_2.0.3    #> [29] digest_0.6.36     lifecycle_1.0.4   vctrs_0.6.5       evaluate_0.24.0   #> [33] glue_1.7.0        ragg_1.3.2        fansi_1.0.6       rmarkdown_2.27    #> [37] purrr_1.0.2       tools_4.4.1       pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"The Whole Game","text":"","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2) library(patchwork) library(chronogram)"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"construct-chronogram","dir":"Articles","previous_headings":"","what":"Construct chronogram","title":"The Whole Game","text":"","code":"## Fictional example data ## data(smallstudy)   ids <- smallstudy$small_study_ids start <- \"01012020\" end <- \"10102021\" meta <- smallstudy$small_study_metadata ab <- smallstudy$small_study_Ab  small_study <- chronogram_skeleton(   ids = ids,   start_date = start,   end_date = end,   ## change this to your ID column name ##   col_ids = elig_study_id,   ## change this to your date column name ##   col_calendar_date = calendar_date )  small_study <- chronogram(small_study, meta)  small_study <- cg_add_experiment(small_study, ab)"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"plot-trajectories","dir":"Articles","previous_headings":"","what":"Plot trajectories","title":"The Whole Game","text":"Plot antibody responses time individual, swimmer plot summarise individuals course.","code":"traj <- cg_plot(small_study,   y_values = serum_Ab_S ) #> Function provided to illustrate chronogram -> #>           ggplot2 interface. #>           Users are likely to want to write their own, #>           study-specific applications  swimmer <- cg_plot_meta(small_study,   visit = serum_Ab_S ) #> Function provided to illustrate chronogram -> #>           ggplot2 interface. #> Function assumes the #>           presence of {dose_1, date_dose_1, dose_2, date_dose_2} #>           columns. #>           Users are likely to want to write their own, #>           study-specific applications  traj swimmer"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"customise-plots","dir":"Articles","previous_headings":"Plot trajectories","what":"Customise plots","title":"The Whole Game","text":"Using ggplot2 patchwork adjustments.","code":"lay <- \" a a a b \" (   (traj + labs(y = \"anti-S IgG\") + scale_y_log10()) /     (swimmer + theme(axis.text.y = element_blank())) ) +   plot_layout(design = lay) &   plot_annotation(tag_levels = \"A\") &   theme_bw(base_size = 8) &   theme(legend.position = \"none\") &   theme(plot.tag = element_text(size = 16, face = \"bold\")) &   labs(x = \"date\") #> Warning in scale_y_log10(): log-10 transformation introduced infinite values. #> log-10 transformation introduced infinite values."},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"subset-data","dir":"Articles","previous_headings":"","what":"Subset data","title":"The Whole Game","text":"","code":"## upto 50d after dose 2 ## cg_after_dose_2 <- cg_window_by_metadata(small_study,   windowing_date_col = date_dose_2,   preceding_days = 0,   following_days = 50 )  ## upto 21d before dose 2 ## cg_before_dose_2 <- cg_window_by_metadata(small_study,   windowing_date_col = date_dose_2,   preceding_days = 21,   following_days = 0 )   cg_after_dose_2 <- cg_after_dose_2 %>% mutate(cohort = \"post D2\")  cg_before_dose_2 <- cg_before_dose_2 %>% mutate(cohort = \"pre D2\")  cg_dose_2 <- bind_rows(cg_after_dose_2, cg_before_dose_2)  cg_dose_2 <- cg_dose_2 %>% mutate(   cohort =     factor(cohort,       levels = c(         \"pre D2\",         \"post D2\"       )     ) )"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"re-plot-the-subsetted-data","dir":"Articles","previous_headings":"Subset data","what":"Re-plot the subsetted data","title":"The Whole Game","text":"Note participant 3, sample ~50d dose 2 now excluded.","code":"traj_2 <- cg_dose_2 %>%   cg_plot(.,     y_values = serum_Ab_S   ) #> Function provided to illustrate chronogram -> #>           ggplot2 interface. #>           Users are likely to want to write their own, #>           study-specific applications  pd <- position_dodge(0.4)  violin_2 <- cg_dose_2 %>%   ## geom_line fails if lots of NA rows provided ##   filter(!is.na(serum_Ab_S)) %>%   ggplot(aes(     x = cohort, y = serum_Ab_S,     group = elig_study_id   )) +   geom_point(position = pd) +   geom_line(position = pd)  swimmer_2 <- cg_plot_meta(cg_dose_2,   visit = serum_Ab_S ) #> Function provided to illustrate chronogram -> #>           ggplot2 interface. #> Function assumes the #>           presence of {dose_1, date_dose_1, dose_2, date_dose_2} #>           columns. #>           Users are likely to want to write their own, #>           study-specific applications   lay2 <- \" aac aac aa# bb# \"  (   (traj_2 +     labs(y = \"anti-S IgG\", x = \"date\") +     scale_y_log10()) +     (swimmer_2 +       labs(x = \"date\") +       theme(axis.text.y = element_blank())) +     (violin_2 +       labs(y = \"anti-S IgG\") +       scale_y_continuous(trans = \"log10\") +       annotation_logticks(sides = \"l\")) ) +   plot_layout(design = lay2) &   plot_annotation(tag_levels = \"A\") &   theme_bw(base_size = 8) &   theme(legend.position = \"none\") &   theme(plot.tag = element_text(size = 16, face = \"bold\"))"},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"The Whole Game","text":"Chronogram now assembled relevant data answer (simple) biological question (dose 2 boost anti-S IgG?) retrieved, plotted readied statistical test. Please see vignettes deeper demonstration chronogram functions.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/articles/chronogram.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"The Whole Game","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] chronogram_1.0.0 patchwork_1.2.0  ggplot2_3.5.1    dplyr_1.1.4      #>  #> loaded via a namespace (and not attached): #>  [1] gtable_0.3.5      jsonlite_1.8.8    highr_0.11        compiler_4.4.1    #>  [5] tidyselect_1.2.1  tidyr_1.3.1       jquerylib_0.1.4   systemfonts_1.1.0 #>  [9] scales_1.3.0      textshaping_0.4.0 yaml_2.3.9        fastmap_1.2.0     #> [13] R6_2.5.1          labeling_0.4.3    generics_0.1.3    knitr_1.48        #> [17] tibble_3.2.1      desc_1.4.3        munsell_0.5.1     lubridate_1.9.3   #> [21] bslib_0.7.0       pillar_1.9.0      rlang_1.1.4       utf8_1.2.4        #> [25] cachem_1.1.0      xfun_0.45         fs_1.6.4          sass_0.4.9        #> [29] timechange_0.3.0  cli_3.6.3         pkgdown_2.1.0     withr_3.0.0       #> [33] magrittr_2.0.3    digest_0.6.36     grid_4.4.1        lifecycle_1.0.4   #> [37] vctrs_0.6.5       evaluate_0.24.0   glue_1.7.0        farver_2.1.2      #> [41] ragg_1.3.2        fansi_1.0.6       colorspace_2.1-0  purrr_1.0.2       #> [45] rmarkdown_2.27    tools_4.4.1       pkgconfig_2.0.3   htmltools_0.5.8.1"},{"path":"https://franciscrickinstitute.github.io/chronogram/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward Carr. Author, maintainer. David Greenwood. Author. Marianne Shawe-Taylor. Author.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carr E, Greenwood D, Shawe-Taylor M (2024). chronogram: Chronogram: Adaptive Data Casting Pandemic Data Analysis. R package version 1.0.0, https://franciscrickinstitute.github.io/chronogram/.","code":"@Manual{,   title = {chronogram: Chronogram: Adaptive Data Casting for Pandemic Data Analysis},   author = {Edward Carr and David Greenwood and Marianne Shawe-Taylor},   year = {2024},   note = {R package version 1.0.0},   url = {https://franciscrickinstitute.github.io/chronogram/}, }"},{"path":"https://franciscrickinstitute.github.io/chronogram/index.html","id":"chronogram","dir":"","previous_headings":"","what":"Chronogram: Adaptive Data Casting for Pandemic Data Analysis","title":"Chronogram: Adaptive Data Casting for Pandemic Data Analysis","text":"goal chronogram “cast” annotate metadata, laboratory clinical data tidy-like data structure. bridges LIMS / database style data warehouse data ready interrogation test biological hypotheses. Chronogram designed SARS-CoV-2 pandemic (2019-). However, pathogen, vaccine symptoms agnostic. can adapted pathogen, studies several pathogens/vaccines combinations. Chronogram uses tidyverse approaches several reasons: final aim often ggplot2 many tidyverse verbs immediately useful chronogram object. wider R/tidyverse/quarto/reproducible science ecosystem tools offer valuable ways extend. within teams, scientist clinicians coding experience frequently target R/tidyverse","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Chronogram: Adaptive Data Casting for Pandemic Data Analysis","text":"can install development version chronogram GitHub :","code":"## 1. Setup R and git #### # install.packages(\"usethis\") # install.packages(\"credentials\")  # Replace: ## - XXXX with your github username ## - YYYY@ZZZZ with the email address you use for github usethis::use_git_config(user.name = \"XXXX\", user.email = \"YYYY@ZZZZ\")   # Go to github page to generate token usethis::create_github_token()   # paste your PAT into pop-up that follows... credentials::set_github_pat()  ## ^ above only needs running once for R and git to interact  ## 2. Install package itself ####  # install.packages(\"devtools\") devtools::install_github(\"FrancisCrickInstitute/chronogram\")"},{"path":"https://franciscrickinstitute.github.io/chronogram/index.html","id":"the-problem","dir":"","previous_headings":"","what":"The problem","title":"Chronogram: Adaptive Data Casting for Pandemic Data Analysis","text":"Immunology studies vaccine responses traditionally designed follows: matched cohort vaccinated day return visits subsequent day assays performed samples matched visit days study design shown (left). single vaccine dose (d0) 3 visits: baseline 2 follow-visits d7 d14. resulting data can compiled simple data structure (, right): individuals rows, columns metadata (age, sex, etc) two assays reported columns: assay 1 {visit 1, visit 2, visit 3}; assay 2 {visit 1, visit 2, visit 3}.  observational cohort studies, particularly pandemic settings, inadequate immunology studies conducted pragmatically, vaccine dates, available samples, dates additional doses can (!) change. example real-world study shown :  Many studies massive datasets, stored SQL database equivalent LIMS solutions. great ways store maintain source data, allow user - particularly biologist - “place” results full immunological context: participant’s prior exposures vaccines infections. problem chronogram package solves.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/index.html","id":"the-solution","dir":"","previous_headings":"","what":"The solution","title":"Chronogram: Adaptive Data Casting for Pandemic Data Analysis","text":"chronogram hidden date often within inscription, example headstone, often Roman numerals doubling Roman characters. adopted name package, helps find hidden immunological meaning dates. sketch real-world study single vaccine dose (top). Now, arranged resulting data chronogram format (bottom), data structured ‘long format’ row presented specific date individual. Metadata (grey) repeated row. experimental data stored relevant date sampling.  Chronogram’s date-centric design allows users integrate interrogate data, otherwise hidden (least hard find) traditional formats. example, examining responses vaccines 9-12d dose, traditional model indiscriminately say “visit 3 closest, use set”. contrast, chronogram allows relevant slice data (green box) taken rapidly, date dose stored metadata columns (grey).","code":"slice.of.data <- chrono %>%   filter(calendar_date > date_dose_1 + 9) %>%   filter(calendar_date < date_dose_1 + 12)"},{"path":"https://franciscrickinstitute.github.io/chronogram/index.html","id":"the-real-world-solution","dir":"","previous_headings":"","what":"The real world solution","title":"Chronogram: Adaptive Data Casting for Pandemic Data Analysis","text":"date-aware, chronogram also allows user assemble date-varying data: - dates positive PCR results (dates negative PCRs occupational screening); - S gene target failure (presence); - viral sequencing results; symptoms; - additional doses illustrate, let’s add infections example study. observational study never -day infections across cohort, real world infection data always requires kind approach. Now participant 001 positive PCR day 50, S gene target failure, participant 002 positive PCR day 40 S gene presence.  data cast chronogram structure  biological question example waning first vaccination proceeds 2 months. 001 002, last visit unhelpful, boost additional encounter antigen (infection). can slice something like : keeps 003’s data (green box), ignores 001 002’s data (red boxes).  Chronogram contains suite functions annotate chronograms, recommend running immediately assembly. annotations include number doses, number infections, even straightforward select, example: annotation function cg_annotate_episodes_find() searches user-specified number days earlier (later), gather symptoms, tests, sequencing might occur different days really single episode infection. cg_annotate_episodes_count() converts count. Check vignettes info. Many examples use SARS-CoV-2-like scenario testing, vaccines etc, however use chronogram manage kind vaccine response (+exposure) data pathogen(s).","code":"## get a list of unhelpful participants ## unhelpful.participants <- chrono %>%   group_by(ID) %>%   filter(stringr::str_detect(PCR, \"pos\"))  ## make the selection ## slice.of.data <- chrono %>%   ## filter ##   filter(!ID %in% unhelpful.participants) %>%   ## window ##   filter(calendar_date > date_dose_1 + 60) annotated.chrono %>%   filter(number_of_infections == 0)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/built_smallstudy.html","id":null,"dir":"Reference","previous_headings":"","what":"Small study: pre-built chronogram — built_smallstudy","title":"Small study: pre-built chronogram — built_smallstudy","text":"fictional covid-19 vaccine study 3 individuals","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/built_smallstudy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small study: pre-built chronogram — built_smallstudy","text":"","code":"built_smallstudy"},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/built_smallstudy.html","id":"built-smallstudy","dir":"Reference","previous_headings":"","what":"built_smallstudy","title":"Small study: pre-built chronogram — built_smallstudy","text":"list 2 components small_study_chronogram_skeleton Example chronogram_skeleton small_study_chronogram Example chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/built_smallstudy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small study: pre-built chronogram — built_smallstudy","text":"","code":"data(\"built_smallstudy\")"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to add experimental data to a chronogram — cg_add_experiment","title":"A helper function to add experimental data to a chronogram — cg_add_experiment","text":"helper function add experimental data chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to add experimental data to a chronogram — cg_add_experiment","text":"","code":"cg_add_experiment(cg, experiment)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to add experimental data to a chronogram — cg_add_experiment","text":"cg chronogram object (class tbl_chronogram) experiment tibble containing experimental data (columns: calendar_date, specified ID)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to add experimental data to a chronogram — cg_add_experiment","text":"object chronogram class","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_experiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A helper function to add experimental data to a chronogram — cg_add_experiment","text":"","code":"if (FALSE) { # \\dontrun{ ## a 3-person chronogram_skeleton ## small_study <- chronogram_skeleton(   col_ids = elig_study_id,   ids = c(1, 2, 3),   start_date = c(\"01012020\"),   end_date = \"10102021\",   col_calendar_date = calendar_date )  ## Create a tibble containing some metadata for our 3 individuals ## small_study_metadata <- tibble::tribble(   ~elig_study_id, ~age, ~sex, ~dose_1, ~date_dose_1, ~dose_2, ~date_dose_2,   1, 40, \"F\", \"AZD1222\", \"05/01/2021\", \"AZD1222\", \"05/02/2021\",   2, 45, \"F\", \"BNT162b2\", \"05/01/2021\", \"BNT162b2\", \"05/02/2021\",   3, 35, \"M\", \"BNT162b2\", \"10/01/2021\", \"BNT162b2\", \"10/03/2021\" )  ## Set appropriate metadata column classes ## small_study_metadata <- small_study_metadata %>%   mutate(across(c(sex, dose_1, dose_2), ~ as.factor(.x)))  small_study_metadata <- small_study_metadata %>%   mutate(across(contains(\"date\"), ~ lubridate::dmy(.x)))  ## Make a chronogram ## small_study_chronogram <- chronogram(   small_study,   small_study_metadata )   ## Create a tibble of exemplar experimental data ## # suggest naming assays as {source}_{test}, eg serum_Ab # as SARS-CoV-2 PCRs could be reasonably performed # on stool, blood, sputum, BAL etc. # chronogram package does not enforce any rules here. # small_study_Ab <-   tibble::tribble(     ~elig_study_id, ~calendar_date, ~serum_Ab_S, ~serum_Ab_N,     1, \"05/01/2021\", 500, 100,     1, \"15/01/2021\", 4000, 100,     1, \"03/02/2021\", 3750, 100,     1, \"15/02/2021\", 10000, 100,     2, \"05/01/2021\", 0, 0,     2, \"15/01/2021\", 4000 / 2, 0,     2, \"03/02/2021\", 3750 / 2, 0,     2, \"15/02/2021\", 10000 / 2, 0,     3, \"05/01/2021\", 0, 0,     3, \"25/01/2021\", 4000 / 2, 0,     3, \"03/02/2021\", 3750 / 2, 0,     3, \"20/03/2021\", 10000 / 2, 0   )  small_study_Ab <- small_study_Ab %>%   mutate(across(contains(\"date\"), ~ lubridate::dmy(.x)))  ## Add to chronogram ## small_study_chronogram <- cg_add_experiment(   small_study_chronogram,   small_study_Ab ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_treatment.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to add treatment data to a chronogram — cg_add_treatment","title":"A helper function to add treatment data to a chronogram — cg_add_treatment","text":"helper function add treatment data chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_treatment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to add treatment data to a chronogram — cg_add_treatment","text":"","code":"cg_add_treatment(cg, treatment)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_treatment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to add treatment data to a chronogram — cg_add_treatment","text":"cg chronogram object (class cg_tbl) treatment tibble containing treatment dates (columns: specified calendar_date, ID columns, defined chronogram_skeleton()) code wraps thecg_add_experiment function.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_treatment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to add treatment data to a chronogram — cg_add_treatment","text":"chronogram","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_add_treatment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A helper function to add treatment data to a chronogram — cg_add_treatment","text":"","code":"if (FALSE) { # \\dontrun{  ## Create a tibble of exemplar treatment data ## # Here, we have treated ID=1 with B cell depletion # therapy, rituximab (RTX). # small_study_treatment <-   tibble::tribble(     ~elig_study_id, ~calendar_date, ~treatment,     1, \"01/02/2021\", \"RTX\"   ) small_study_treatment <- small_study_treatment %>%   mutate(across(contains(\"date\"), ~ lubridate::dmy(.x)))  ## Add to chronogram ## small_study_chronogram <- cg_add_treatment(   small_study_chronogram,   small_study_treatment ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_antigenic_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and assign flags based on infection history — cg_annotate_antigenic_history","title":"Calculate and assign flags based on infection history — cg_annotate_antigenic_history","text":"Calculate assign flags based infection history","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_antigenic_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and assign flags based on infection history — cg_annotate_antigenic_history","text":"","code":"cg_annotate_antigenic_history(   x,   episode_number = episode_number,   dose_number = dose_number,   episode_variant_summarised = episode_variant_summarised,   ag_col = antigenic_history )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_antigenic_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and assign flags based on infection history — cg_annotate_antigenic_history","text":"x chronogram episode_number character vector identify episode_number column. Default \"episode_number\". dose_number character vector identify column containing number doses received day. Default \"dose_number\". episode_variant_summarised character vector identify column summarising variant call. Default \"episode_variant_summarised\". ag_col column infection flag","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_antigenic_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and assign flags based on infection history — cg_annotate_antigenic_history","text":"chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_antigenic_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and assign flags based on infection history — cg_annotate_antigenic_history","text":"","code":"if (FALSE) { # \\dontrun{ cg <- cg_annotate_label_episodes(cg) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and assign flags based on infection history — cg_annotate_episodes_count","title":"Calculate and assign flags based on infection history — cg_annotate_episodes_count","text":"counts total number infections individual end study (data freeze), makes available fresh column. function run cg_annotate_episodes_find(). cumulative number infections use cg_annotate_episodes_find() .","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and assign flags based on infection history — cg_annotate_episodes_count","text":"","code":"cg_annotate_episodes_count(   x,   episode_number = episode_number,   count_col = count_col )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and assign flags based on infection history — cg_annotate_episodes_count","text":"x chronogram episode_number character vector use label ID column. Default \"episode_number\". count_col column infection count","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and assign flags based on infection history — cg_annotate_episodes_count","text":"subsetted chronogram","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and assign flags based on infection history — cg_annotate_episodes_count","text":"","code":"if (FALSE) { # \\dontrun{ cg <- cg_annotate_episodes_count(cg) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Find infections per individual — cg_annotate_episodes_fill","title":"Find infections per individual — cg_annotate_episodes_fill","text":"Find infections per individual","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find infections per individual — cg_annotate_episodes_fill","text":"","code":"cg_annotate_episodes_fill(   x,   col_to_fill,   col_to_return,   .direction = \"down\",   episode_numbers_col = episode_number )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find infections per individual — cg_annotate_episodes_fill","text":"x chronogram col_to_fill name column fill within episode col_to_return name returned, filled column .direction See tidyr::fill(), provide quoted. episode_numbers_col column name use episode numbers. Default episode_number, unquoted.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find infections per individual — cg_annotate_episodes_fill","text":"x chronogram, episode data filled within episode.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find infections per individual — cg_annotate_episodes_fill","text":"","code":"if (FALSE) { # \\dontrun{  ## Simulate some infection data ## infections_to_add <- tibble::tribble(   ~calendar_date, ~elig_study_id, ~LFT, ~PCR, ~symptoms,   \"01102020\", \"1\", \"pos\", NA, NA,   \"11102020\", \"1\", \"pos\", NA, \"severe\" ) ## Make calendar_date a date ## infections_to_add$calendar_date <- lubridate::dmy(   infections_to_add$calendar_date ) ## add to chronogram small.study <- cg_add_experiment(small.study, infections_to_add,   ids_column_name = \"elig_study_id\",   calendar_date = \"calendar_date\" )  ## now infection finding ## small.study.inf <- cg_annotate_episodes_find(small.study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"^severe\") ) summary(small.study.inf$episode_number)  ## exact text matching ## test2 <- cg_annotate_episodes_find(small.study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"Pos\", \"Post\", \"^mild\") ) summary(test2$episode_number)  ## empty strings will error (as they otherwise match everything) ## test3a <- cg_annotate_episodes_find(small.study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"\") ) ## a 'random' string will not error ## test3b <- cg_annotate_episodes_find(small.study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"a\") )  summary(test2$episode_number) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find infections per individual — cg_annotate_episodes_find","title":"Find infections per individual — cg_annotate_episodes_find","text":"Find infections per individual","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find infections per individual — cg_annotate_episodes_find","text":"","code":"cg_annotate_episodes_find(   x,   infection_cols,   infection_present,   episode_days = 14,   episode_numbers_col = episode_number,   episode_start_col = episode_start,   episode_end_col = episode_end )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find infections per individual — cg_annotate_episodes_find","text":"x chronogram infection_cols Columns might contain information regarding infection status, symptoms, LFT results, PCR results, sequencing results. infection_present Strings used infection_cols indicate presence infection. episode_days number days within consider events single episode. example, symptom onset 10d positive PCR test single episode? Default 14d. episode_numbers_col column name use episode numbers. Default episode_number (unquoted). episode_start_col column names store episode start end dates (defaults: episode_start episode_end, unquoted). episode_end_col column names store episode start end dates (defaults: episode_start episode_end, unquoted).","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find infections per individual — cg_annotate_episodes_find","text":"x chronogram, episode numbers annotated","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find infections per individual — cg_annotate_episodes_find","text":"","code":"if (FALSE) { # \\dontrun{ data(built_smallstudy) small_study <- built_smallstudy$chronogram  ## Simulate some infection data ## infections_to_add <- tibble::tribble(   ~calendar_date, ~elig_study_id, ~LFT, ~PCR, ~symptoms,   \"01102020\", \"1\", \"pos\", NA, NA,   \"11102020\", \"1\", \"pos\", NA, \"severe\",   \"11042021\", \"2\", \"pos\", NA, \"mild\",   \"11082021\", \"2\", \"pos\", \"Pos\", \"mild\",   \"11112021\", \"2\", \"pos\", \"Pos\", NA ) ## Make calendar_date a date ## infections_to_add$calendar_date <- lubridate::dmy(   infections_to_add$calendar_date ) ## add to chronogram small_study <- cg_add_experiment(small_study, infections_to_add)  ## now infection finding ## small_study_inf <- cg_annotate_episodes_find(small_study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"^severe\") ) summary(small_study_inf$episode_number)  ## exact text matching ## test2 <- cg_annotate_episodes_find(small_study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"Pos\", \"Post\", \"^mild\") ) summary(test2$episode_number)  ## empty strings will error (as they otherwise match everything) ## test3a <- cg_annotate_episodes_find(small_study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"\") ) ## a 'random' string will not error ## test3b <- cg_annotate_episodes_find(small_study,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"a\") )  summary(test2$episode_number) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find_seroconversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Find seroconversion episodes per individual — cg_annotate_episodes_find_seroconversion","title":"Find seroconversion episodes per individual — cg_annotate_episodes_find_seroconversion","text":"cg_annotate_episodes_find_seroconversion() finds episodes based seroconversion. , use N (SARS-CoV-2 nucleocapsid). majority covid vaccines use contain Spike , seroconversion N means exposure SARS-CoV-2. symptoms, lateral flow tests SARS-CoV-2 PCR positivity, experimental data matches exposure within days (hours). Seroconversion occurs anytime blood samples. Chronogram therefore provides separate annotation functions cg_annotate_episodes_find() cg_annotate_episodes_find_seroconversion(), options combine two results.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find_seroconversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find seroconversion episodes per individual — cg_annotate_episodes_find_seroconversion","text":"","code":"cg_annotate_episodes_find_seroconversion(   x,   serum_N_titre = NULL,   serum_N_cutoff = 1,   N_seroconversion_episode = \"N_seroconversion_episode\",   episode_number_append = \"number\",   episode_start_col_append = \"start\",   episode_end_col_append = \"end\" )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find_seroconversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find seroconversion episodes per individual — cg_annotate_episodes_find_seroconversion","text":"x chronogram serum_N_titre column containing seroconversion information. serum_N_cutoff numerical threshold seropositivity. Greater equal threshold taken positive. Default 1 - check assay documentation. N_seroconversion_episode column name resulting episode flag. Default \"N_seroconversion_episode\" episode_number_append appended N_seroconversion_episode provide column name episode number. Default \"number\" episode_start_col_append appended N_seroconversion_episode provide column name episode start date. Default \"start\" episode_end_col_append appended N_seroconversion_episode provide column name episode end date. Default \"_end\"","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find_seroconversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find seroconversion episodes per individual — cg_annotate_episodes_find_seroconversion","text":"x chronogram, episode numbers annotated","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_episodes_find_seroconversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find seroconversion episodes per individual — cg_annotate_episodes_find_seroconversion","text":"","code":"if (FALSE) { # \\dontrun{  data(\"built_smallstudy\")  cg <- built_smallstudy$chronogram cg_annotate_episodes_find_seroconversion(cg,   serum_N_titre =     \"serum_Ab_N\" ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_exposures_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative counting seroconversion episodes per individual — cg_annotate_exposures_count","title":"Cumulative counting seroconversion episodes per individual — cg_annotate_exposures_count","text":"cg_annotate_exposures_count returns cumulative count exposures. exposures can vaccines, infection episodes, seroconversion episodes (seroconversion episode biologically infection - difference two concomittant symptoms, diagnostic testing).","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_exposures_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative counting seroconversion episodes per individual — cg_annotate_exposures_count","text":"","code":"cg_annotate_exposures_count(   x,   episode_number = episode_number,   N_seroconversion_episode_number = N_seroconversion_episode_number,   dose_number = dose_number,   exposure_number = exposure_number )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_exposures_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative counting seroconversion episodes per individual — cg_annotate_exposures_count","text":"x chronogram episode_number column containing infection episode numbers. cg_annotate_episodes_find() Default episode_number. N_seroconversion_episode_number column name resulting episode flag. Generated cg_annotate_episodes_find_seroconversion(). Default \"N_seroconversion_episode_number\". dose_number column name cumulative doses. Generated cg_annotate_vaccines_count(). Default \"dose_number\". exposure_number column name return cumulative counter. Default \"exposure_number\".","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_exposures_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative counting seroconversion episodes per individual — cg_annotate_exposures_count","text":"x chronogram, episode numbers annotated","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_exposures_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative counting seroconversion episodes per individual — cg_annotate_exposures_count","text":"","code":"if (FALSE) { # \\dontrun{  data(\"built_smallstudy\") cg <- built_smallstudy$chronogram  ## Simulate some infection data ## infections_to_add <- tibble::tribble(   ~calendar_date, ~elig_study_id, ~LFT, ~PCR, ~symptoms,   \"01102020\", \"1\", \"pos\", NA, NA,   \"11102020\", \"1\", \"pos\", NA, \"severe\" ) ## Make calendar_date a date ## infections_to_add$calendar_date <- lubridate::dmy(   infections_to_add$calendar_date ) ## add to chronogram cg <- cg_add_experiment(cg, infections_to_add)  ## annotate vaccines ## cg <- cg_annotate_vaccines_count(cg,   dose = dose,   dose_counter = dose_number,   vaccine_date_stem = date_dose,   intermediate_days = 7 )  ## now infection finding ## cg <- cg_annotate_episodes_find(cg,   infection_cols = c(\"LFT\", \"PCR\", \"symptoms\"),   infection_present = c(\"pos\", \"Post\", \"^severe\") )    cg <- cg_annotate_episodes_find_seroconversion(cg,   serum_N_titre =     \"serum_Ab_N\" )  cg.final <- cg_annotate_exposures_count(cg) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_vaccines_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and assign flags based on vaccine history — cg_annotate_vaccines_count","title":"Calculate and assign flags based on vaccine history — cg_annotate_vaccines_count","text":"Calculate assign flags based vaccine history","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_vaccines_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and assign flags based on vaccine history — cg_annotate_vaccines_count","text":"","code":"cg_annotate_vaccines_count(   x,   vaccine_date_stem = NULL,   dose = dose,   dose_counter = NULL,   intermediate_days = 14 )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_vaccines_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and assign flags based on vaccine history — cg_annotate_vaccines_count","text":"x chronogram vaccine_date_stem start vaccine date columns. Default NULL. Try \"date_dose\"; asssumes \"date_dose_1,2,3...\" dose character vector use label dose column. numerical dose, filled date dose (empty intervening days). Default \"dose\". dose_counter column return cumulative number doses. Default NULL. Try \"dose_number\" intermediate_days number days pad dose date return eg \"1star\" within intermediate days dose 1, numeric","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_vaccines_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and assign flags based on vaccine history — cg_annotate_vaccines_count","text":"annotated chronogram (class cg_tbl).","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_annotate_vaccines_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and assign flags based on vaccine history — cg_annotate_vaccines_count","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg <- built_smallstudy$chronogram  ## annotate vaccines ## cg <- cg_annotate_vaccines_count(cg,   dose = dose,   dose_counter = dose_number,   vaccine_date_stem = date_dose,   intermediate_days = 7 ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_assemble.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to assemble chronogram — cg_assemble","title":"Wrapper to assemble chronogram — cg_assemble","text":"cg_assemble() wraps chronogram_skeleton(), chronogram() cg_add_experiment(). verbose messsaging option (default) provided help troubleshoot input. troubleshooting, running chronogram_skeleton(), chronogram() cg_add_experiment() sequentially suggested.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_assemble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to assemble chronogram — cg_assemble","text":"","code":"cg_assemble(   start_date,   end_date,   calendar_date_col,   metadata,   metadata_ids_col,   experiment_data_list = NULL,   verbose = TRUE )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_assemble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to assemble chronogram — cg_assemble","text":"start_date start date, format recognised lubridate::dmy() end_date end date, format recognised lubridate::dmy() calendar_date_col label date column  (unquoted). metadata tibble containing metadata ID column name (IDs) present cg_skeleton metadata_ids_col (unquoted) column name IDs metadata tibble. Studies may use StudyID, StudyId, PID, etc. default provided. experiment_data_list list tibbles experiment data. See cg_add_experiment() details. Ignored provided. verbose Default TRUE. Show progress messages?","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_assemble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to assemble chronogram — cg_assemble","text":"chronogram (class cg_tbl)","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_assemble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to assemble chronogram — cg_assemble","text":"","code":"if (FALSE) { # \\dontrun{ data(\"smallstudy\")   cg <- cg_assemble(   start_date = \"01012020\",   end_date = \"10012020\",   metadata = smallstudy$small_study_metadata,   metadata_ids_col = elig_study_id,   calendar_date_col = calendar_date )  ## Now with experiment data ## small_study_Ab <-   tibble::tribble(     ~elig_study_id, ~calendar_date, ~serum_Ab_S, ~serum_Ab_N,     1, \"05/01/2021\", 500, 100,     1, \"15/01/2021\", 4000, 100,     1, \"03/02/2021\", 3750, 100,     1, \"15/02/2021\", 10000, 100,     2, \"05/01/2021\", 0, 0,     2, \"15/01/2021\", 4000 / 2, 0,     2, \"03/02/2021\", 3750 / 2, 0,     2, \"15/02/2021\", 10000 / 2, 0,     3, \"05/01/2021\", 0, 0,     3, \"25/01/2021\", 4000 / 2, 0,     3, \"03/02/2021\", 3750 / 2, 0,     3, \"20/03/2021\", 10000 / 2, 0   )  small_study_Ab <- small_study_Ab %>%   mutate(across(contains(\"date\"), ~ lubridate::dmy(.x)))  cg <- cg_assemble(   start_date = \"01012020\",   end_date = \"10012020\",   metadata = smallstudy$small_study_metadata,   metadata_ids_col = elig_study_id,   calendar_date_col = calendar_date,   experiment_data_list = list(small_study_Ab) )  ## Or two items of experiment data ## infections_to_add <- tibble::tribble(   ~calendar_date, ~elig_study_id, ~LFT, ~PCR, ~symptoms,   \"01102020\", \"1\", \"pos\", NA, NA,   \"11102020\", \"1\", \"pos\", NA, \"severe\" ) ## Make calendar_date a date ## infections_to_add$calendar_date <- lubridate::dmy(   infections_to_add$calendar_date )  cg <- cg_assemble(   start_date = \"01012020\",   end_date = \"10102021\",   metadata = smallstudy$small_study_metadata,   metadata_ids_col = elig_study_id,   calendar_date_col = calendar_date,   experiment_data_list = list(small_study_Ab, infections_to_add) ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_load.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to load a chronogram — cg_load","title":"A helper function to load a chronogram — cg_load","text":"helper function load chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to load a chronogram — cg_load","text":"","code":"cg_load(file = NULL)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to load a chronogram — cg_load","text":"file quoted filename. Include extension.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to load a chronogram — cg_load","text":"re-loaded chronogram","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A helper function to load a chronogram — cg_load","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg_orig <- built_smallstudy$chronogram ff <- tempfile() cg_save(cg_orig, file = ff) cg_new <- cg_load(ff)  summary(cg_new == cg_orig) identical(cg_new, cg_orig) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"cg_plot — cg_plot","title":"cg_plot — cg_plot","text":"Function create ggplot2 object, plotting user-defined y axis time. ggplot2 objects retain entirety provided dataset. allows later adjustments, adding extra geom_layers new information, applying facets. find data examine obj$data. save ggplot2 objects, source data ALSO saved. cg_plot() removes un-used data default (drop_vars=TRUE). writing study specific ggplot2, best practice select minimal columns calling ggplot().","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cg_plot — cg_plot","text":"","code":"cg_plot(   cg,   x = NULL,   y_values,   drop_vars = TRUE,   point_alpha = 0.4,   point_shape = 20,   link_obs = TRUE,   link_colour = \"grey\",   link_alpha = 0.4,   ... )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cg_plot — cg_plot","text":"cg chronogram x column time use x axis. NULL, default chronogram's calendar date attribute. user may want derive use alternatives eg 'daysSinceDose2'. y_values column within chronogram containing data wish plot. drop_vars Default TRUE. See description. point_alpha alpha geom_point(). point_shape shape geom_point(). link_obs Default TRUE. Draw line link results individual? link_colour colour geom_line() link_alpha alpha geom_line() ... passed aes()","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cg_plot — cg_plot","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg <- built_smallstudy$chronogram  p1 <- cg_plot_meta(cg,   visit = serum_Ab_S )  p2 <- cg_plot(cg,   y_values = serum_Ab_S ) library(patchwork) p2 / p1  (p2 + scale_y_log10()) / p1 } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"cg_plot_meta — cg_plot_meta","title":"cg_plot_meta — cg_plot_meta","text":"Function create ggplot2 object, plotting user-defined metadata time swimmer's plot. ggplot2 objects retain entirety provided dataset. allows later adjustments, adding extra geom_layers new information, applying facets. find data examine obj$data. save ggplot2 objects, source data ALSO saved. cg_plot_meta() removes un-used data default (drop_vars=TRUE). writing study specific ggplot2, best practice select minimal columns calling ggplot().","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cg_plot_meta — cg_plot_meta","text":"","code":"cg_plot_meta(   cg,   x = NULL,   date_dose_1 = date_dose_1,   dose_1 = dose_1,   date_dose_2 = date_dose_2,   dose_2 = dose_2,   visit = visit,   drop_vars = TRUE,   fill = NULL )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cg_plot_meta — cg_plot_meta","text":"cg chronogram x column time use x axis. NULL, default chronogram's calendar date attribute. user may want derive use alternatives eg 'daysSinceDose2'. date_dose_1 column containing date dose. dose_1 column containing vaccine formulation. date_dose_2 column containing date dose. dose_2 column containing vaccine formulation. visit column within chronogram indicate study visit (.e. samples available; NA samples taken, !=NA samples available). small study example, serum_Ab_S fills brief. drop_vars Default TRUE. See description. fill column used determine fill","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_plot_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cg_plot_meta — cg_plot_meta","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg <- built_smallstudy$chronogram  p1 <- cg_plot_meta(cg,   visit = serum_Ab_S )  p2 <- cg_plot(cg,   y_values = serum_Ab_S ) library(patchwork) p2 / p1  (p2 + scale_y_log10()) / p1 } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_save.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to save a chronogram — cg_save","title":"A helper function to save a chronogram — cg_save","text":"helper function save chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to save a chronogram — cg_save","text":"","code":"cg_save(cg, file = NULL, ..., verbose = TRUE)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to save a chronogram — cg_save","text":"cg chronogram object (class cg_tbl) file quoted filename. Include extension. ... passed base::save(). example, compress verbose logical. Default TRUE. Display messages?","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to save a chronogram — cg_save","text":"INVISIBLE, saved file","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A helper function to save a chronogram — cg_save","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg_orig <- built_smallstudy$chronogram ff <- tempfile() cg_save(cg_orig, file = ff) cg_new <- cg_load(ff)  summary(cg_new == cg_orig) identical(cg_new, cg_orig) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_select_visit.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a visit within a windowed chronogram — cg_select_visit","title":"Select a visit within a windowed chronogram — cg_select_visit","text":"Select visit within windowed chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_select_visit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a visit within a windowed chronogram — cg_select_visit","text":"","code":"cg_select_visit(cg, visit_col = NULL, visit = c(\"earliest\", \"latest\"))"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_select_visit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a visit within a windowed chronogram — cg_select_visit","text":"cg windowed chronogram visit_col character vector use label column either dates visits, results. usually experimental data column. Default \"NULL\". visit either \"earliest\" \"latest\"","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_select_visit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a visit within a windowed chronogram — cg_select_visit","text":"subsetted chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_select_visit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a visit within a windowed chronogram — cg_select_visit","text":"","code":"if (FALSE) { # \\dontrun{ SevenDaysPrePostDose3 <- cg_window_by_metadata(   annotatedChronogram, \"date_dose_3\", 7, 7 ) SevenDaysPrePostDose3 <- cg_select_visit(   SevenDaysPrePostDose3, \"earliest\" ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_episode.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a window of dates from a chronogram: with respect to episode start. — cg_window_by_episode","title":"Take a window of dates from a chronogram: with respect to episode start. — cg_window_by_episode","text":"Take window dates chronogram: respect episode start.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_episode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a window of dates from a chronogram: with respect to episode start. — cg_window_by_episode","text":"","code":"cg_window_by_episode(   cg,   episode_numbers_col = \"episode_number\",   episode_handling = c(\"first\", \"last\", \"all\"),   preceding_days,   following_days )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_episode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a window of dates from a chronogram: with respect to episode start. — cg_window_by_episode","text":"cg chronogram episode_numbers_col column name use episode numbers. Default episode_number. episode_handling episode reference. Must one \"first\", \"last\", \"\". preceding_days used filter( date > (date_col - preceding_days) ) following_days used filter( date < (date_col + following_days) )","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_episode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a window of dates from a chronogram: with respect to episode start. — cg_window_by_episode","text":"subsetted chronogram","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_episode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a window of dates from a chronogram: with respect to episode start. — cg_window_by_episode","text":"","code":"if (FALSE) { # \\dontrun{  SevenDaysPrePostFirstEpisode <- cg_window_by_episode(   annotatedChronogram, \"first\", 7, 7 ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a window of dates from a chronogram — cg_window_by_metadata","title":"Take a window of dates from a chronogram — cg_window_by_metadata","text":"Works respect column (eg date dose 3).","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a window of dates from a chronogram — cg_window_by_metadata","text":"","code":"cg_window_by_metadata(cg, windowing_date_col, preceding_days, following_days)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a window of dates from a chronogram — cg_window_by_metadata","text":"cg chronogram windowing_date_col column containing reference date (must repeat date row individual's record). preceding_days used filter( date > (windowing_date_col - preceding_days) ) following_days used filter( date < (windowing_date_col + following_days) )","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a window of dates from a chronogram — cg_window_by_metadata","text":"windowed chronogram","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a window of dates from a chronogram — cg_window_by_metadata","text":"","code":"if (FALSE) { # \\dontrun{ SevenDaysPrePostDose3 <- cg_window_by_metadata(   annotatedChronogram, \"date_dose_3\", 7, 7 ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_visit.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a window of dates from a chronogram: with respect to visits. — cg_window_by_visit","title":"Take a window of dates from a chronogram: with respect to visits. — cg_window_by_visit","text":"special case cg_window_by_episode(, episode_handling = \"\")","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_visit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a window of dates from a chronogram: with respect to visits. — cg_window_by_visit","text":"","code":"cg_window_by_visit(cg, visit_col = NULL, preceding_days, following_days)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_visit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a window of dates from a chronogram: with respect to visits. — cg_window_by_visit","text":"cg chronogram visit_col character vector use label column either dates visits, results. usually experimental data column. Default \"NULL\". preceding_days used filter( date > (date_col - preceding_days) ) following_days used filter( date < (date_col + following_days) )","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_visit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a window of dates from a chronogram: with respect to visits. — cg_window_by_visit","text":"subsetted chronogram","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/cg_window_by_visit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a window of dates from a chronogram: with respect to visits. — cg_window_by_visit","text":"","code":"if (FALSE) { # \\dontrun{  SevenDaysPrePostFirstEpisode <- cg_window_by_visit(   annotatedChronogram,   visit_col = \"S\", 7, 7 ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"check ExperimentalData — check_experiment","title":"check ExperimentalData — check_experiment","text":"check ExperimentalData","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check ExperimentalData — check_experiment","text":"","code":"check_experiment(x, cg = NULL)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check ExperimentalData — check_experiment","text":"x tibble containing ExperimentalData, ID column date SAMPLE (date assay). cg chronogram join","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check ExperimentalData — check_experiment","text":"\"valid\" stop message","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"check metadata — check_metadata","title":"check metadata — check_metadata","text":"check metadata","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check metadata — check_metadata","text":"","code":"check_metadata(x, cg_skeleton = NULL)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check metadata — check_metadata","text":"x tibble containing metadata cg_skeleton chronogram skeleton","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/check_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check metadata — check_metadata","text":"TRUE stop message","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to build a chronogram, from a chronogram_skeleton and metadata — chronogram","title":"A helper function to build a chronogram, from a chronogram_skeleton and metadata — chronogram","text":"helper function build chronogram, chronogram_skeleton metadata","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to build a chronogram, from a chronogram_skeleton and metadata — chronogram","text":"","code":"chronogram(cg_skeleton, metadata)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to build a chronogram, from a chronogram_skeleton and metadata — chronogram","text":"cg_skeleton cg_skeleton object metadata tibble containing metadata ID column name (IDs) present cg_skeleton","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to build a chronogram, from a chronogram_skeleton and metadata — chronogram","text":"object chronogram class, metadata spread across calendar_dates.","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A helper function to build a chronogram, from a chronogram_skeleton and metadata — chronogram","text":"","code":"if (FALSE) { # \\dontrun{ ## a 3-person chronogram_skeleton ## small_study <- chronogram_skeleton(   col_ids = elig_study_id,   ids = c(1, 2, 3),   start_date = \"01012020\",   end_date = \"10102021\",   col_calendar_date = calendar_date )  ## Create a tibble containing some metadata for our 3 individuals ## small_study_metadata <- tibble::tribble(   ~elig_study_id, ~age, ~sex, ~dose_1, ~date_dose_1, ~dose_2, ~date_dose_2,   1, 40, \"F\", \"AZD1222\", \"05/01/2021\", \"AZD1222\", \"05/02/2021\",   2, 45, \"F\", \"BNT162b2\", \"05/01/2021\", \"BNT162b2\", \"05/02/2021\",   3, 35, \"M\", \"BNT162b2\", \"10/01/2021\", \"BNT162b2\", \"10/03/2021\" )  ## Set appropriate metadata column classes ## library(dplyr) small_study_metadata <- small_study_metadata %>%   mutate(across(c(sex, dose_1, dose_2), ~ as.factor(.x)))  small_study_metadata <- small_study_metadata %>%   mutate(across(contains(\"date\"), ~ lubridate::dmy(.x)))  ## Make a chronogram ## small_study_chronogram <- chronogram(   small_study,   small_study_metadata )    #'  ## Add Experimental data ##  small_study_Ab <-   tibble::tribble(     ~elig_study_id, ~calendar_date, ~S, ~N,     1, \"05/01/2021\", 500, 100,     1, \"15 / 01 / 2021\", 4000, 100,     1, \"03 / 02 / 2021\", 3750, 100,     1, \"15 / 02 / 2021\", 10000, 100,     2, \"05 / 01 / 2021\", 0, 0,     2, \"15 / 01 / 2021\", 4000 / 2, 0,     2, \"03 / 02 / 2021\", 3750 / 2, 0,     2, \"15 / 02 / 2021\", 10000 / 2, 0,     3, \"05 / 01 / 2021\", 0, 0,     3, \"25 / 01 / 2021\", 4000 / 2, 0,     3, \"03 / 02 / 2021\", 3750 / 2, 0,     3, \"20 / 03 / 2021\", 10000 / 2, 0   )  small_study_Ab <- small_study_Ab %>%   mutate(across(contains(\"date\"), ~ lubridate::dmy(.x)))  small_study_chronogram <- cg_add_experiment(   small_study_chronogram,   small_study_Ab ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram_skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to build the chronogram skeleton, a two column index, for chronogram — chronogram_skeleton","title":"A helper function to build the chronogram skeleton, a two column index, for chronogram — chronogram_skeleton","text":"helper function build chronogram skeleton, two column index, chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram_skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to build the chronogram skeleton, a two column index, for chronogram — chronogram_skeleton","text":"","code":"chronogram_skeleton(   ids = NULL,   col_ids = column_name_for_ids,   start_date = NULL,   end_date = NULL,   col_calendar_date = column_name_for_calendar_date )"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram_skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to build the chronogram skeleton, a two column index, for chronogram — chronogram_skeleton","text":"ids vector study, participant IDs. col_ids label ID column. Default column_name_for_ids (unquoted). Studies may use StudyID, StudyId, PID, etc. User advised change suit. start_date start date, format recognised lubridate::dmy() end_date end date, format recognised lubridate::dmy() col_calendar_date label date column. Default column_name_for_calendar_date (unquoted). User advised change suit.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram_skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function to build the chronogram skeleton, a two column index, for chronogram — chronogram_skeleton","text":"chronogram skeleton class","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/chronogram_skeleton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A helper function to build the chronogram skeleton, a two column index, for chronogram — chronogram_skeleton","text":"","code":"if (FALSE) { # \\dontrun{ small_study <- chronogram_skeleton(   ids = c(1, 2, 3),   start_date = \"01012020\",   end_date = \"10102021\" )  ## Duplicate dates, or dates lubridate::dmy() does not recognise ## small_study <- chronogram_skeleton(   ids = c(1, 2, 3),   start_date = c(\"01012020\", \"05012020\"),   end_date = \"10102021\" ) small_study <- chronogram_skeleton(   ids = c(1, 2, 3),   start_date = c(\"01012020\"),   end_date = c(\"10102021\", \"20102020\") ) small_study <- chronogram_skeleton(   ids = c(1, 2, 3),   start_date = \"20200101\",   end_date = \"10102021\" ) small_study <- chronogram_skeleton(   ids = c(1, 2, 3),   start_date = \"01012020\",   end_date = \"20201010\" )  ## Duplicate participant IDs are accepted, but give a warning ## small_study <- chronogram_skeleton(   ids = c(1, 2, 3, 3),   start_date = \"01012020\",   end_date = \"10102021\" ) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.cg_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Dplyr reconstruct for chronogram — dplyr_reconstruct.cg_tbl","title":"Dplyr reconstruct for chronogram — dplyr_reconstruct.cg_tbl","text":"recommended : https://dplyr.tidyverse.org/reference/dplyr_extending.html","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.cg_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dplyr reconstruct for chronogram — dplyr_reconstruct.cg_tbl","text":"","code":"# S3 method for class 'cg_tbl' dplyr_reconstruct(data, template)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.cg_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dplyr reconstruct for chronogram — dplyr_reconstruct.cg_tbl","text":"data data template example class","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.cg_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dplyr reconstruct for chronogram — dplyr_reconstruct.cg_tbl","text":"cg_tbl dplyr verb action","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.cg_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dplyr reconstruct for chronogram — dplyr_reconstruct.cg_tbl","text":"Ensures dplyr verbs return cg_tbl, rather tbl. User can ignore.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.grouped_cg_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Dplyr reconstruct for grouped chronogram — dplyr_reconstruct.grouped_cg_df","title":"Dplyr reconstruct for grouped chronogram — dplyr_reconstruct.grouped_cg_df","text":"recommended : https://dplyr.tidyverse.org/reference/dplyr_extending.html","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.grouped_cg_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dplyr reconstruct for grouped chronogram — dplyr_reconstruct.grouped_cg_df","text":"","code":"# S3 method for class 'grouped_cg_df' dplyr_reconstruct(data, template)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.grouped_cg_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dplyr reconstruct for grouped chronogram — dplyr_reconstruct.grouped_cg_df","text":"data data template example class","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.grouped_cg_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dplyr reconstruct for grouped chronogram — dplyr_reconstruct.grouped_cg_df","text":"grouped_cg_df dplyr verb action","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_reconstruct.grouped_cg_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dplyr reconstruct for grouped chronogram — dplyr_reconstruct.grouped_cg_df","text":"Ensures dplyr verbs return grouped_cg_df, rather grouped_df. User can ignore.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.cg_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Dplyr row slice for chronogram — dplyr_row_slice.cg_tbl","title":"Dplyr row slice for chronogram — dplyr_row_slice.cg_tbl","text":"recommended : https://dplyr.tidyverse.org/reference/dplyr_extending.html","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.cg_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dplyr row slice for chronogram — dplyr_row_slice.cg_tbl","text":"","code":"# S3 method for class 'cg_tbl' dplyr_row_slice(data, i, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.cg_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dplyr row slice for chronogram — dplyr_row_slice.cg_tbl","text":"data data rows eg slice ... additional arguments","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.cg_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dplyr row slice for chronogram — dplyr_row_slice.cg_tbl","text":"cg_tbl dplyr verb action","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.cg_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dplyr row slice for chronogram — dplyr_row_slice.cg_tbl","text":"Ensures dplyr verbs return cg_tbl, rather tbl. User can ignore.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.grouped_cg_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Dplyr row slice for grouped chronogram — dplyr_row_slice.grouped_cg_df","title":"Dplyr row slice for grouped chronogram — dplyr_row_slice.grouped_cg_df","text":"recommended : https://dplyr.tidyverse.org/reference/dplyr_extending.html","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.grouped_cg_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dplyr row slice for grouped chronogram — dplyr_row_slice.grouped_cg_df","text":"","code":"# S3 method for class 'grouped_cg_df' dplyr_row_slice(data, i, ..., preserve = FALSE)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.grouped_cg_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dplyr row slice for grouped chronogram — dplyr_row_slice.grouped_cg_df","text":"data data rows eg slice ... additional arguments preserve FALSE","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.grouped_cg_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dplyr row slice for grouped chronogram — dplyr_row_slice.grouped_cg_df","text":"grouped_cg_df dplyr verb action","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/dplyr_row_slice.grouped_cg_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dplyr row slice for grouped chronogram — dplyr_row_slice.grouped_cg_df","text":"Ensures dplyr verbs return grouped_cg_df, rather grouped_df. User can ignore.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.cg_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Glimpse S3 method for chronogram objects (class cg_tbl) — glimpse.cg_tbl","title":"Glimpse S3 method for chronogram objects (class cg_tbl) — glimpse.cg_tbl","text":"Glimpse S3 method chronogram objects (class cg_tbl)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.cg_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glimpse S3 method for chronogram objects (class cg_tbl) — glimpse.cg_tbl","text":"","code":"# S3 method for class 'cg_tbl' glimpse(x, width = NULL, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.cg_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glimpse S3 method for chronogram objects (class cg_tbl) — glimpse.cg_tbl","text":"x chrongram width, ... passed pillar::glimpse","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.cg_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glimpse S3 method for chronogram objects (class cg_tbl) — glimpse.cg_tbl","text":"print console","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.cg_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glimpse S3 method for chronogram objects (class cg_tbl) — glimpse.cg_tbl","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg <- built_smallstudy$chronogram glimpse(cg) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.grouped_cg_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Glimpse S3 method for grouped chronogram objects (class grouped_cg_df) — glimpse.grouped_cg_df","title":"Glimpse S3 method for grouped chronogram objects (class grouped_cg_df) — glimpse.grouped_cg_df","text":"Glimpse S3 method grouped chronogram objects (class grouped_cg_df)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.grouped_cg_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glimpse S3 method for grouped chronogram objects (class grouped_cg_df) — glimpse.grouped_cg_df","text":"","code":"# S3 method for class 'grouped_cg_df' glimpse(x, width = NULL, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.grouped_cg_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glimpse S3 method for grouped chronogram objects (class grouped_cg_df) — glimpse.grouped_cg_df","text":"x grouped chrongram width, ... passed pillar::glimpse","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.grouped_cg_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glimpse S3 method for grouped chronogram objects (class grouped_cg_df) — glimpse.grouped_cg_df","text":"print console","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse.grouped_cg_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glimpse S3 method for grouped chronogram objects (class grouped_cg_df) — glimpse.grouped_cg_df","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg <- built_smallstudy$chronogram glimpse(cg) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_experiment_data.cg_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Glimpse S3 method for experiment data from chronogram objects (class cg_tbl) — glimpse_experiment_data","title":"Glimpse S3 method for experiment data from chronogram objects (class cg_tbl) — glimpse_experiment_data","text":"Glimpse S3 method experiment data chronogram objects (class cg_tbl)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_experiment_data.cg_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glimpse S3 method for experiment data from chronogram objects (class cg_tbl) — glimpse_experiment_data","text":"","code":"glimpse_experiment_data(x, width = NULL, ...)  # S3 method for class 'cg_tbl' glimpse_experiment_data(x, width = NULL, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_experiment_data.cg_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glimpse S3 method for experiment data from chronogram objects (class cg_tbl) — glimpse_experiment_data","text":"x chrongram width, ... passed pillar::glimpse","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_experiment_data.cg_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glimpse S3 method for experiment data from chronogram objects (class cg_tbl) — glimpse_experiment_data","text":"print console","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_experiment_data.cg_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glimpse S3 method for experiment data from chronogram objects (class cg_tbl) — glimpse_experiment_data","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg <- built_smallstudy$chronogram glimpse_experiment_data(cg) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_metadata.cg_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Glimpse S3 method for metadata from chronogram objects (class cg_tbl) — glimpse_metadata","title":"Glimpse S3 method for metadata from chronogram objects (class cg_tbl) — glimpse_metadata","text":"Glimpse S3 method metadata chronogram objects (class cg_tbl)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_metadata.cg_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glimpse S3 method for metadata from chronogram objects (class cg_tbl) — glimpse_metadata","text":"","code":"glimpse_metadata(x, width = NULL, ...)  # S3 method for class 'cg_tbl' glimpse_metadata(x, width = NULL, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_metadata.cg_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glimpse S3 method for metadata from chronogram objects (class cg_tbl) — glimpse_metadata","text":"x chrongram width, ... passed pillar::glimpse","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_metadata.cg_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glimpse S3 method for metadata from chronogram objects (class cg_tbl) — glimpse_metadata","text":"print console","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/glimpse_metadata.cg_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glimpse S3 method for metadata from chronogram objects (class cg_tbl) — glimpse_metadata","text":"","code":"if (FALSE) { # \\dontrun{ data(\"built_smallstudy\") cg <- built_smallstudy$chronogram glimpse_metadata(cg) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/group_by.cg_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Group-by chronogram — group_by.cg_tbl","title":"Group-by chronogram — group_by.cg_tbl","text":"S3 implementation dplyr::group_by() accepts chronogram returns object grouped_cg_df class. retains attributes orginal chronogram.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/group_by.cg_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group-by chronogram — group_by.cg_tbl","text":"","code":"# S3 method for class 'cg_tbl' group_by(.data, ..., .add = FALSE, .drop = dplyr::group_by_drop_default(.data))"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/group_by.cg_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group-by chronogram — group_by.cg_tbl","text":".data input chronogram, cg_tbl ..., .add, .drop arguments expected group_by S3","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/group_data_trim.html","id":null,"dir":"Reference","previous_headings":"","what":"dplyr:::group_data_trim — group_data_trim","title":"dplyr:::group_data_trim — group_data_trim","text":"dplyr:::group_data_trim","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/group_data_trim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dplyr:::group_data_trim — group_data_trim","text":"","code":"group_data_trim(group_data)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/group_data_trim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dplyr:::group_data_trim — group_data_trim","text":"group_data grouped dataset","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/group_data_trim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"dplyr:::group_data_trim — group_data_trim","text":"dplyr:::group_data_trim","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram.html","id":null,"dir":"Reference","previous_headings":"","what":"new chronogram — new_chronogram","title":"new chronogram — new_chronogram","text":"new chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"new chronogram — new_chronogram","text":"","code":"new_chronogram(x, metadata_cols, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"new chronogram — new_chronogram","text":"x tbl, daughter join cg_skl_tbl one () objects coerced tbl. metadata_cols column names metadata tibble ... passed new_tibble(). Adds grouping support.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"new chronogram — new_chronogram","text":"x extended tibble class cg_tbl","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"new chronogram — new_chronogram","text":"","code":"if (FALSE) { # \\dontrun{ x <- new_chronogram(x) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram_skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"new_chronogram_skeleton — new_chronogram_skeleton","title":"new_chronogram_skeleton — new_chronogram_skeleton","text":"low level constructor function. Use helper chronogram_skeleton() instead.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram_skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"new_chronogram_skeleton — new_chronogram_skeleton","text":"","code":"new_chronogram_skeleton(x, calendar_date_col = NULL, ids_col = NULL)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram_skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"new_chronogram_skeleton — new_chronogram_skeleton","text":"x tibble calendar_date_col provided rlang::enquo(an_unquoted_string) ids_col provided rlang::enquo(an_unquoted_string)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_chronogram_skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"new_chronogram_skeleton — new_chronogram_skeleton","text":"x tibble class cg_skl_tbl","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_grouped_chronogram.html","id":null,"dir":"Reference","previous_headings":"","what":"New grouped chronogram — new_grouped_chronogram","title":"New grouped chronogram — new_grouped_chronogram","text":"constructor grouped chronogram. called automatically S3 method: group_by.cg_tbl().","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_grouped_chronogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New grouped chronogram — new_grouped_chronogram","text":"","code":"new_grouped_chronogram(x, groups, ..., class = character())"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_grouped_chronogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New grouped chronogram — new_grouped_chronogram","text":"x chronogram groups groups ... parsed dplyr::group_by() class character vector class","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_grouped_chronogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New grouped chronogram — new_grouped_chronogram","text":"x extended grouped tibble class grouped_cg_df","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_grouped_chronogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New grouped chronogram — new_grouped_chronogram","text":"","code":"if (FALSE) { # \\dontrun{ x <- new_chronogram(x) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_tbl2chronogram.html","id":null,"dir":"Reference","previous_headings":"","what":"new_tbl2chronogram — new_tbl2chronogram","title":"new_tbl2chronogram — new_tbl2chronogram","text":"wrapper function coerce tibble chronogram. function handles grouped chronograms. See chronogram::chronogram() constructor.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_tbl2chronogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"new_tbl2chronogram — new_tbl2chronogram","text":"","code":"new_tbl2chronogram(x, ..., class = character())"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/new_tbl2chronogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"new_tbl2chronogram — new_tbl2chronogram","text":"x tibble coerce ... passed tibble::new_tibble() class character vector classes","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pitch_chronogram.html","id":null,"dir":"Reference","previous_headings":"","what":"PITCH study: pre-built chronogram — pitch_chronogram","title":"PITCH study: pre-built chronogram — pitch_chronogram","text":"provided example derived de-identified PITCH dataset available , CC--4.0 licence: https://data.mendeley.com/datasets/fyp26zjgmj/1 Published: 3 November 2021, DOI: 10.17632/fyp26zjgmj.1. Contributors: Rebecca Payne, Susan Hopkins, Victoria Hall, Christina Dold, Christopher Duncan, Alex Richter, Miles Carroll, Gavin Screaton, Thushan de Silva, Lance Turtle, Paul Klenerman, Susanna Dunachie, PITCH Consortium authors.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pitch_chronogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PITCH study: pre-built chronogram — pitch_chronogram","text":"","code":"pitch_chronogram"},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pitch_chronogram.html","id":"pitch-chronogram-a-chronogram","dir":"Reference","previous_headings":"","what":"pitch_chronogram A chronogram","title":"PITCH study: pre-built chronogram — pitch_chronogram","text":"pitch_chronogram Example pitch_chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pitch_chronogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PITCH study: pre-built chronogram — pitch_chronogram","text":"dataset supports Payne et al. Immunogenicity standard extended dosing intervals BNT162b2 mRNA vaccine Cell 2021 NOTE: Changes made de-identified public dataset (DOI: 10.17632/fyp26zjgmj.1). 1. public data reports dates MM/YYYY. build chronogram assumed 15/MM/YYYY dose 1, used available intervals days place remaining data time. illustration purposes, need plausible DD/MM/YYYY dates - real. 2. public dataset used example (assays included). NB: motivation re-analyse Payne et al. scientific reasons, use example dataset. Instead consult de-identified Mendeley data (DOI: 10.17632/fyp26zjgmj.1), Cell manuscript's data code availability statement.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/pitch_chronogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PITCH study: pre-built chronogram — pitch_chronogram","text":"","code":"data(\"pitch_chronogram\")"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_skl_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"print chronogram skeleton — print.cg_skl_tbl","title":"print chronogram skeleton — print.cg_skl_tbl","text":"print chronogram skeleton","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_skl_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print chronogram skeleton — print.cg_skl_tbl","text":"","code":"# S3 method for class 'cg_skl_tbl' print(x, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_skl_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print chronogram skeleton — print.cg_skl_tbl","text":"x chronogram skeleton object (class cg_skl_tbl) ... additional arguments passed tibble::print S3 generic","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_skl_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print chronogram skeleton — print.cg_skl_tbl","text":"print console","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_skl_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print chronogram skeleton — print.cg_skl_tbl","text":"","code":"if (FALSE) { # \\dontrun{ small.study <- chronogram_skeleton(   ids = c(1, 2, 3),   start_date = \"01012020\",   end_date = \"10102021\" )  ## print, with default tibble options ## small.study  ## print, with eg 3 rows ## print(small.study, n = 3) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"print chronogram — print.cg_tbl","title":"print chronogram — print.cg_tbl","text":"print chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print chronogram — print.cg_tbl","text":"","code":"# S3 method for class 'cg_tbl' print(x, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print chronogram — print.cg_tbl","text":"x chronogram object (class tbl_chronogram) ... additional arguments passed tibble print S3 generic","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print chronogram — print.cg_tbl","text":"print console","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/print.cg_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print chronogram — print.cg_tbl","text":"","code":"if (FALSE) { # \\dontrun{ ## a 3-person chronogram_skeleton ## small_study <- chronogram_skeleton(   col_ids = elig_study_id,   ids = c(1, 2, 3),   start_date = \"01012020\",   end_date = \"10102021\",   col_calendar_date = calendar_date )  ## Create a tibble containing some metadata for our 3 individuals ## small_study_metadata <- tibble::tribble(   ~elig_study_id, ~age, ~sex, ~dose_1, ~date_dose_1, ~dose_2, ~date_dose_2,   1, 40, \"F\", \"AZD1222\", \"05/01/2021\", \"AZD1222\", \"05/02/2021\",   2, 45, \"F\", \"BNT162b2\", \"05/01/2021\", \"BNT162b2\", \"05/02/2021\",   3, 35, \"M\", \"BNT162b2\", \"10/01/2021\", \"BNT162b2\", \"10/03/2021\" )  ## Set appropriate metadata column classes ## library(dplyr) small_study_metadata <- small_study_metadata %>%   mutate(across(c(sex, dose_1, dose_2), ~ as.factor(.x)))  small_study_metadata <- small_study_metadata %>%   mutate(across(contains(\"date\"), ~ lubridate::dmy(.x)))  ## Make a chronogram ## small_study_chronogram <- chronogram(   small_study,   small_study_metadata )  ## print, with default tibble options ## small_study_chronogram  ## print, with eg 3 rows ## print(small_study_chronogram, n = 3) } # }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/smallstudy.html","id":null,"dir":"Reference","previous_headings":"","what":"Small study — smallstudy","title":"Small study — smallstudy","text":"fictional covid-19 vaccine study 3 individuals","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/smallstudy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small study — smallstudy","text":"","code":"smallstudy"},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/smallstudy.html","id":"smallstudy","dir":"Reference","previous_headings":"","what":"smallstudy","title":"Small study — smallstudy","text":"list three components small_study_ids IDs used small study identify 3 individuals. vector. small_study_metadata Example metadata. tibble. small_study_Ab Example experimental data. tibble.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/smallstudy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small study — smallstudy","text":"","code":"data(\"smallstudy\")"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/ungroup.grouped_cg_df.html","id":null,"dir":"Reference","previous_headings":"","what":"ungroup-by chronogram — ungroup.grouped_cg_df","title":"ungroup-by chronogram — ungroup.grouped_cg_df","text":"S3 implementation dplyr::ungroup() accepts grouped_cg_df returns chronogram. retains attributes orginal chronogram.","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/ungroup.grouped_cg_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ungroup-by chronogram — ungroup.grouped_cg_df","text":"","code":"# S3 method for class 'grouped_cg_df' ungroup(x, ...)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/ungroup.grouped_cg_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ungroup-by chronogram — ungroup.grouped_cg_df","text":"x input chronogram, grouped_cg_df ..., arguments expected group_by S3","code":""},{"path":[]},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram.html","id":null,"dir":"Reference","previous_headings":"","what":"validate chronogram — validate_chronogram","title":"validate chronogram — validate_chronogram","text":"validate chronogram","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate chronogram — validate_chronogram","text":"","code":"validate_chronogram(x)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate chronogram — validate_chronogram","text":"x chronogram object (class cg_tbl)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate chronogram — validate_chronogram","text":"TRUE valid","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram_skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"validate chronogram skeleton — validate_chronogram_skeleton","title":"validate chronogram skeleton — validate_chronogram_skeleton","text":"validate chronogram skeleton","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram_skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate chronogram skeleton — validate_chronogram_skeleton","text":"","code":"validate_chronogram_skeleton(x)"},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram_skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate chronogram skeleton — validate_chronogram_skeleton","text":"x chronogram skeleton object (class cg_skl_tbl)","code":""},{"path":"https://franciscrickinstitute.github.io/chronogram/reference/validate_chronogram_skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate chronogram skeleton — validate_chronogram_skeleton","text":"Errors, TRUE valid cg_skl_tbl","code":""}]
